From https://github.com/zededa/zenbuild
   5f371a6..5388aac  master     -> origin/master
Updating 5f371a6..5388aac
Fast-forward
 images/rootfs.yml.in          | 1 +
 images/rootfs.yml.in.hikey    | 1 +
 pkg/wwan/usr/bin/wwan-init.sh | 3 ++-
 3 files changed, 4 insertions(+), 1 deletion(-)
make -C build-tools all
make[1]: Entering directory '/home/zededa-ci/src/zenbuild/build-tools'
make[1]: Nothing to be done for 'all'.
make[1]: Leaving directory '/home/zededa-ci/src/zenbuild/build-tools'
From github.com:zededa/go-provision
   ce4ba24..a744000  master        -> origin/master
   ac4d71c..4ff43f5  bridge        -> origin/bridge
   ce4ba24..32f5b14  fixes         -> origin/fixes
 * [new branch]      lisp-ser      -> origin/lisp-ser
 * [new branch]      sftp_download -> origin/sftp_download
Updating ce4ba24..a744000
Fast-forward
 Gopkg.lock                                         |   8 +-
 cmd/client/client.go                               |  55 +++-
 cmd/client/parseuuid.go                            |  20 +-
 cmd/hardwaremodel/hardwaremodel.go                 |   8 +-
 cmd/zedagent/handledownload.go                     |   9 +-
 cmd/zedagent/handlemetrics.go                      |   5 +-
 cmd/zedagent/handleverifier.go                     |   7 +-
 cmd/zedmanager/handledomainmgr.go                  |   3 +-
 cmd/zedmanager/handledownloader.go                 |   3 +-
 cmd/zedmanager/handleidentitymgr.go                |   3 +-
 cmd/zedmanager/handleverifier.go                   |  39 +--
 cmd/zedmanager/handlezedrouter.go                  |   3 +-
 cmd/zedmanager/updatestatus.go                     |  32 +--
 cmd/zedrouter/acl.go                               | 289 ++++++++++++++-------
 cmd/zedrouter/iptables.go                          |  14 +-
 cmd/zedrouter/pbr.go                               |  64 +++--
 cmd/zedrouter/service.go                           |  10 +
 cmd/zedrouter/zedrouter.go                         |  30 ++-
 hardware/model.go                                  |  35 ++-
 scripts/device-steps.sh                            |  11 +-
 .../github.com/zededa/api/zconfig/appconfig.pb.go  |   6 +-
 .../github.com/zededa/api/zconfig/devcommon.pb.go  |  14 +-
 .../github.com/zededa/api/zconfig/devconfig.pb.go  | 178 +++++++------
 .../github.com/zededa/api/zconfig/netcmn.pb.go     |  70 ++++-
 .../github.com/zededa/api/zconfig/storage.pb.go    |  76 +-----
 src/vendor/github.com/zededa/api/zconfig/vm.pb.go  |   8 +-
 types/domainmgrtypes.go                            |   4 +
 types/downloadertypes.go                           |   4 +
 types/eidtypes.go                                  |   4 +
 types/verifiertypes.go                             |   4 +
 types/zedroutertypes.go                            |   4 +
 31 files changed, 658 insertions(+), 362 deletions(-)
Already up-to-date.
Building and pushing "zededa/lisp:6d380e9199627386175f22ced21420fe4e310360"
6d380e9199627386175f22ced21420fe4e310360: Pulling from zededa/lisp
Digest: sha256:1e728e8ca101cf186dd8ae9a04a3229fd88122b549b8886f881f97454b22ee2d
Status: Image is up to date for zededa/lisp:6d380e9199627386175f22ced21420fe4e310360
Building and pushing "zededa/lisp:latest"
Sending build context to Docker daemon  8.674MB
Step 1/20 : FROM golang:1.9.1-alpine AS go-build
 ---> cc52d0ad4cce
Step 2/20 : RUN apk update
 ---> Using cache
 ---> b0202011f9d2
Step 3/20 : RUN apk add --no-cache git gcc linux-headers libc-dev libpcap-dev
 ---> Using cache
 ---> e1e8ea822b21
Step 4/20 : ADD . /go/src/github.com/zededa/lisp
 ---> Using cache
 ---> 242ce817dcb2
Step 5/20 : RUN go install github.com/zededa/lisp/cmd/...
 ---> Using cache
 ---> 8e444f2b7927
Step 6/20 : FROM alpine:3.6
 ---> a9277cb286bb
Step 7/20 : RUN apk add --no-cache curl gcc linux-headers libc-dev python python-dev libffi-dev openssl-dev libpcap-dev iproute2 tcpdump ethtool ip6tables
 ---> Using cache
 ---> 22c4198640c2
Step 8/20 : RUN mkdir /lisp
 ---> Using cache
 ---> a735a97af9aa
Step 9/20 : ARG LISP_URL=https://www.dropbox.com/s/ogfu5gaw550rlkq/zededa.tgz
 ---> Using cache
 ---> e7b21c08194f
Step 10/20 : RUN cd /lisp ; curl --insecure -L $LISP_URL | gzip -dc | tar -xf -
 ---> Using cache
 ---> cd58f592636e
Step 11/20 : ADD scripts/sudo /usr/bin/sudo
 ---> Using cache
 ---> a1f724579c22
Step 12/20 : ADD conf scripts/RESTART-LISP scripts/RUN-LISP.rtr1 scripts/RUN-LISP scripts/STOP-LISP scripts/CONFIG-SVC scripts/RL scripts/pslisp scripts/log-packets scripts/ping-mesh.py /lisp/
 ---> Using cache
 ---> 0eab36290edb
Step 13/20 : RUN python /lisp/get-pip.py
 ---> Using cache
 ---> 620e1c2a9759
Step 14/20 : RUN pip install -r /lisp/pip-requirements.txt
 ---> Using cache
 ---> 9bd928d74993
Step 15/20 : RUN echo 'PS1="`hostname | cut -d . -f 0` > "' >> /root/.profile
 ---> Using cache
 ---> a882614a45ab
Step 16/20 : COPY --from=go-build /go/bin/dataplane /lisp/lisp-ztr
 ---> Using cache
 ---> 43179075e2fe
Step 17/20 : EXPOSE 8080
 ---> Using cache
 ---> f1dea7f24f37
Step 18/20 : WORKDIR /lisp
 ---> Using cache
 ---> f12db26c3d40
Step 19/20 : CMD ./CONFIG-SVC ; ./RL ; sleep 5 ; tail -f ./logs/*
 ---> Using cache
 ---> 89ae678e5505
Step 20/20 : LABEL org.mobyproject.linuxkit.revision 'unknown' org.mobyproject.linuxkit.version 'unknown' org.opencontainers.image.revision '1ae1269e8b3bb320482493d335b5470e4d0c34fb' org.opencontainers.image.source 'https://github.com/linuxkit/linuxkit'
 ---> Using cache
 ---> 19caac423f38
Successfully built 19caac423f38
Successfully tagged zededa/lisp:latest-arm64
Pushing zededa/lisp:latest-arm64
The push refers to a repository [docker.io/zededa/lisp]
b7e79b889cd1: Preparing
71bfb3bf79cd: Preparing
1b88db435050: Preparing
bc75622ebad5: Preparing
5d58613a215b: Preparing
d07a0209af0b: Preparing
f40ac4a0be73: Preparing
b2de77c3ccdf: Preparing
7559e6e3855b: Preparing
7678a2257549: Preparing
199db0687ace: Preparing
b2de77c3ccdf: Waiting
7559e6e3855b: Waiting
7678a2257549: Waiting
199db0687ace: Waiting
d07a0209af0b: Waiting
f40ac4a0be73: Waiting
b7e79b889cd1: Layer already exists
71bfb3bf79cd: Layer already exists
bc75622ebad5: Layer already exists
1b88db435050: Layer already exists
5d58613a215b: Layer already exists
d07a0209af0b: Layer already exists
f40ac4a0be73: Layer already exists
7559e6e3855b: Layer already exists
b2de77c3ccdf: Layer already exists
7678a2257549: Layer already exists
199db0687ace: Layer already exists
latest-arm64: digest: sha256:4bddf09b41e1fab6929d68aa306a645b91ff96ef4f36becc1b47f812dcbb436c size: 2621
Pushing zededa/lisp:latest-arm64 to manifest zededa/lisp:latest
time="2018-07-27T08:00:22+02:00" level=warning msg="Couldn't find or access image reference \"zededa/lisp:latest-s390x\". Skipping image."
Digest: sha256:42333ef1c1d95da0260276f667277ce0b34dc1b9d9ba7b466283ce21aeae580c 743
Not signing zededa/lisp:latest
Build and push complete, not releasing, all done.
Building and pushing "zededa/ztools:a0615f42b20e2e2dbfac0a9154df7415d367550a"
a0615f42b20e2e2dbfac0a9154df7415d367550a: Pulling from zededa/ztools
no matching manifest for linux/arm64 in the manifest list entries
No image pulled, continuing with build
Sending build context to Docker daemon  25.33MB
Step 1/33 : FROM golang:1.9.1-alpine AS build
 ---> cc52d0ad4cce
Step 2/33 : RUN apk update
 ---> Using cache
 ---> b0202011f9d2
Step 3/33 : RUN apk add --no-cache git gcc linux-headers libc-dev util-linux
 ---> Using cache
 ---> 648257fc5dd9
Step 4/33 : ADD ./ /go/src/github.com/zededa/go-provision/
 ---> e4f188bccf1f
Step 5/33 : ADD etc /config
 ---> b53acae4520c
Step 6/33 : ADD scripts/device-steps.sh scripts/find-uplink.sh scripts/generate-device.sh scripts/generate-self-signed.sh scripts/handlezedserverconfig.sh /opt/zededa/bin/
 ---> b3f9224b3638
Step 7/33 : ADD examples /opt/zededa/examples
 ---> b4b1d8e35bff
Step 8/33 : ADD AssignableAdapters /var/tmp/zededa/AssignableAdapters
 ---> 4f5fadcf2e0f
Step 9/33 : ADD DeviceNetworkConfig /var/tmp/zededa/DeviceNetworkConfig
 ---> 0d043b5ee871
Step 10/33 : ADD lisp.config.base /var/tmp/zededa/lisp.config.base
 ---> 123d8fd79d69
Step 11/33 : RUN (cd ./src/github.com/zededa/go-provision/; scripts/getversion.sh >/opt/zededa/bin/versioninfo)
 ---> Running in c69fb85b35f6
 ---> b4041a2528da
Removing intermediate container c69fb85b35f6
Step 12/33 : RUN cp /opt/zededa/bin/versioninfo /opt/zededa/bin/versioninfo.1
 ---> Running in 9d4dcb2906f5
 ---> d894fe2d3336
Removing intermediate container 9d4dcb2906f5
Step 13/33 : RUN echo Building: `cat /opt/zededa/bin/versioninfo`
 ---> Running in b4ca4b9f6041
Building: 20180314-test-a744000f-2018-07-27.06.00
 ---> f98b92d4b1c3
Removing intermediate container b4ca4b9f6041
Step 14/33 : RUN go install github.com/zededa/go-provision/zedbox/...
 ---> Running in f2bee095ae71
 ---> 75e5bce8b0e4
Removing intermediate container f2bee095ae71
Step 15/33 : RUN cd /opt/zededa/bin ; ln -s /go/bin/* .
 ---> Running in 2650a3147d10
 ---> 24e4bd2aeff9
Removing intermediate container 2650a3147d10
Step 16/33 : RUN cd /opt/zededa/bin ; ln -s zedbox client; ln -s zedbox domainmgr; ln -s zedbox downloader; ln -s zedbox hardwaremodel; ln -s zedbox identitymgr; ln -s zedbox ledmanager; ln -s zedbox logmanager; ln -s zedbox verifier; ln -s zedbox zedagent; ln -s zedbox zedmanager; ln -s zedbox zedrouter
 ---> Running in 107a5c3f55c3
 ---> 84e799647293
Removing intermediate container 107a5c3f55c3
Step 17/33 : FROM zededa/lisp:latest AS lisp
 ---> 8c611457d2fd
Step 18/33 : FROM scratch
 ---> 
Step 19/33 : COPY --from=build /opt/zededa/bin /opt/zededa/bin
 ---> c384105011b4
Step 20/33 : COPY --from=build /opt/zededa/examples /opt/zededa/examples
 ---> e107b43518fd
Step 21/33 : COPY --from=build /var/tmp/zededa/AssignableAdapters /var/tmp/zededa/AssignableAdapters
 ---> e49cad425fbc
Step 22/33 : COPY --from=build /var/tmp/zededa/DeviceNetworkConfig /var/tmp/zededa/DeviceNetworkConfig
 ---> 46c8cab5f2e8
Step 23/33 : COPY --from=build /var/tmp/zededa/lisp.config.base /var/tmp/zededa/lisp.config.base
 ---> 8c4063538154
Step 24/33 : COPY --from=build /config /opt/zededa/examples/config
 ---> 54490a8d5c55
Step 25/33 : COPY --from=build /go/bin/* /opt/zededa/bin/
 ---> 2f81df967971
Step 26/33 : COPY --from=lisp /lisp/lisp-ztr /opt/zededa/bin/
COPY failed: stat /var/lib/docker/btrfs/subvolumes/241f680903a5b615c2930a21cd7806722158a4b724b568f12b1bb2c4ef0ec180/lisp/lisp-ztr: no such file or directory
exit status 1
Building and pushing "zededa/ztools:latest"
Sending build context to Docker daemon  25.33MB
Step 1/33 : FROM golang:1.9.1-alpine AS build
 ---> cc52d0ad4cce
Step 2/33 : RUN apk update
 ---> Using cache
 ---> b0202011f9d2
Step 3/33 : RUN apk add --no-cache git gcc linux-headers libc-dev util-linux
 ---> Using cache
 ---> 648257fc5dd9
Step 4/33 : ADD ./ /go/src/github.com/zededa/go-provision/
 ---> Using cache
 ---> e4f188bccf1f
Step 5/33 : ADD etc /config
 ---> Using cache
 ---> b53acae4520c
Step 6/33 : ADD scripts/device-steps.sh scripts/find-uplink.sh scripts/generate-device.sh scripts/generate-self-signed.sh scripts/handlezedserverconfig.sh /opt/zededa/bin/
 ---> Using cache
 ---> b3f9224b3638
Step 7/33 : ADD examples /opt/zededa/examples
 ---> Using cache
 ---> b4b1d8e35bff
Step 8/33 : ADD AssignableAdapters /var/tmp/zededa/AssignableAdapters
 ---> Using cache
 ---> 4f5fadcf2e0f
Step 9/33 : ADD DeviceNetworkConfig /var/tmp/zededa/DeviceNetworkConfig
 ---> Using cache
 ---> 0d043b5ee871
Step 10/33 : ADD lisp.config.base /var/tmp/zededa/lisp.config.base
 ---> Using cache
 ---> 123d8fd79d69
Step 11/33 : RUN (cd ./src/github.com/zededa/go-provision/; scripts/getversion.sh >/opt/zededa/bin/versioninfo)
 ---> Using cache
 ---> b4041a2528da
Step 12/33 : RUN cp /opt/zededa/bin/versioninfo /opt/zededa/bin/versioninfo.1
 ---> Using cache
 ---> d894fe2d3336
Step 13/33 : RUN echo Building: `cat /opt/zededa/bin/versioninfo`
 ---> Using cache
 ---> f98b92d4b1c3
Step 14/33 : RUN go install github.com/zededa/go-provision/zedbox/...
 ---> Using cache
 ---> 75e5bce8b0e4
Step 15/33 : RUN cd /opt/zededa/bin ; ln -s /go/bin/* .
 ---> Using cache
 ---> 24e4bd2aeff9
Step 16/33 : RUN cd /opt/zededa/bin ; ln -s zedbox client; ln -s zedbox domainmgr; ln -s zedbox downloader; ln -s zedbox hardwaremodel; ln -s zedbox identitymgr; ln -s zedbox ledmanager; ln -s zedbox logmanager; ln -s zedbox verifier; ln -s zedbox zedagent; ln -s zedbox zedmanager; ln -s zedbox zedrouter
 ---> Using cache
 ---> 84e799647293
Step 17/33 : FROM zededa/lisp:latest AS lisp
 ---> 8c611457d2fd
Step 18/33 : FROM scratch
 ---> 
Step 19/33 : COPY --from=build /opt/zededa/bin /opt/zededa/bin
 ---> Using cache
 ---> c384105011b4
Step 20/33 : COPY --from=build /opt/zededa/examples /opt/zededa/examples
 ---> Using cache
 ---> e107b43518fd
Step 21/33 : COPY --from=build /var/tmp/zededa/AssignableAdapters /var/tmp/zededa/AssignableAdapters
 ---> Using cache
 ---> e49cad425fbc
Step 22/33 : COPY --from=build /var/tmp/zededa/DeviceNetworkConfig /var/tmp/zededa/DeviceNetworkConfig
 ---> Using cache
 ---> 46c8cab5f2e8
Step 23/33 : COPY --from=build /var/tmp/zededa/lisp.config.base /var/tmp/zededa/lisp.config.base
 ---> Using cache
 ---> 8c4063538154
Step 24/33 : COPY --from=build /config /opt/zededa/examples/config
 ---> Using cache
 ---> 54490a8d5c55
Step 25/33 : COPY --from=build /go/bin/* /opt/zededa/bin/
 ---> Using cache
 ---> 2f81df967971
Step 26/33 : COPY --from=lisp /lisp/lisp-ztr /opt/zededa/bin/
COPY failed: stat /var/lib/docker/btrfs/subvolumes/cdc62414c5105fb9e97650ca24047ef4f4d61b552e0c6fd1f46e67296a703978/lisp/lisp-ztr: no such file or directory
exit status 1
make: Entering directory '/home/zededa-ci/src/zenbuild/pkg'
(cd ..; ./parse-pkgs.sh pkg/qrexec-lib/Dockerfile.in > pkg/qrexec-lib/Dockerfile)
(cd ..; ./parse-pkgs.sh pkg/qrexec-dom0/Dockerfile.in > pkg/qrexec-dom0/Dockerfile)
(cd ..; ./parse-pkgs.sh pkg/zedctr/Dockerfile.in > pkg/zedctr/Dockerfile)
(cd ..; ./parse-pkgs.sh pkg/mkconf/Dockerfile.in > pkg/mkconf/Dockerfile)
Building and pushing "zededa/grub:35eb3c470422d1bced11f3457ea8ff432d9f0590"
35eb3c470422d1bced11f3457ea8ff432d9f0590: Pulling from zededa/grub
Digest: sha256:bf150f0621da1766807be28c1815d77478dba09b2cba03481e5f3ac4f78e0848
Status: Image is up to date for zededa/grub:35eb3c470422d1bced11f3457ea8ff432d9f0590
Building and pushing "zededa/xen:be954dc9ba840dcff92c7edc1823e7e19d12a8ed"
be954dc9ba840dcff92c7edc1823e7e19d12a8ed: Pulling from zededa/xen
Digest: sha256:24f2cee8341c402bd0a2e7cd67266bde8c40d0c808d73dc362b2e66cc4890051
Status: Image is up to date for zededa/xen:be954dc9ba840dcff92c7edc1823e7e19d12a8ed
Building and pushing "zededa/kernel:e8accf1611206572eef0d8e24fa325e6488bdc7b"
e8accf1611206572eef0d8e24fa325e6488bdc7b: Pulling from zededa/kernel
Digest: sha256:6d1919e26d088a59df02d26fb2b446a93ee7e1eeefd30d52658f81e8ac69de2d
Status: Image is up to date for zededa/kernel:e8accf1611206572eef0d8e24fa325e6488bdc7b
Building and pushing "zededa/xen-tools:ccc3ab24a38b4680bdbe4c204cc628026e7584a7"
ccc3ab24a38b4680bdbe4c204cc628026e7584a7: Pulling from zededa/xen-tools
Digest: sha256:f21f13f68fbbb05d60e57d93c01d1d2f24d5b6dfd24e80cfb5b6cbcd443b8f28
Status: Image is up to date for zededa/xen-tools:ccc3ab24a38b4680bdbe4c204cc628026e7584a7
Building and pushing "zededa/dnsmasq:e2de7e6a478850d931724f951f877cd507d77358"
e2de7e6a478850d931724f951f877cd507d77358: Pulling from zededa/dnsmasq
Digest: sha256:41a49e0dda5409d017f77a009780af01726da90a6abaccecacdf8f07db3417a0
Status: Image is up to date for zededa/dnsmasq:e2de7e6a478850d931724f951f877cd507d77358
Building and pushing "zededa/strongswan:3957eaaa64beb65e946494bab989e861f34811cb"
3957eaaa64beb65e946494bab989e861f34811cb: Pulling from zededa/strongswan
Digest: sha256:dbb68b5d308cfb401a56435f970c6eb084ef23ab02b799b661aea034717ec742
Status: Image is up to date for zededa/strongswan:3957eaaa64beb65e946494bab989e861f34811cb
Building and pushing "zededa/gpt-tools:f0be39997551891e81c6edc38acc20f61077287b"
f0be39997551891e81c6edc38acc20f61077287b: Pulling from zededa/gpt-tools
Digest: sha256:5c8bcc500088c129e2cd37b5723c526f0d9c079222577f23ff77de7aade66135
Status: Image is up to date for zededa/gpt-tools:f0be39997551891e81c6edc38acc20f61077287b
Building and pushing "zededa/dom0-ztools:c6d8f2123c748379add5d3dbbac23e3630131760"
c6d8f2123c748379add5d3dbbac23e3630131760: Pulling from zededa/dom0-ztools
Digest: sha256:012ebc5590697b091e4303bde292e22ec91188850baf0d23c83a2d3909408704
Status: Image is up to date for zededa/dom0-ztools:c6d8f2123c748379add5d3dbbac23e3630131760
Building and pushing "zededa/qrexec-lib:2e0df0df95f86df6953d7d2e7729213b77fd7206"
2e0df0df95f86df6953d7d2e7729213b77fd7206: Pulling from zededa/qrexec-lib
Digest: sha256:92f4a633747b6561c078032dd7815559a892e1920402fd71157177d413713a16
Status: Image is up to date for zededa/qrexec-lib:2e0df0df95f86df6953d7d2e7729213b77fd7206
Building and pushing "zededa/qrexec-dom0:2c3cf9b135409690eaa86092c41f7c800d398468"
2c3cf9b135409690eaa86092c41f7c800d398468: Pulling from zededa/qrexec-dom0
Digest: sha256:3ba20a0fefa8250d250140dc8e3dbd0e1f3b0fd26169aef1f158e02ad894ef30
Status: Image is up to date for zededa/qrexec-dom0:2c3cf9b135409690eaa86092c41f7c800d398468
Building and pushing "zededa/wwan:5f68442251df0f2625fde14e947f11de2374b72d"
5f68442251df0f2625fde14e947f11de2374b72d: Pulling from zededa/wwan
no matching manifest for linux/arm64 in the manifest list entries
No image pulled, continuing with build
Sending build context to Docker daemon  14.85kB
Step 1/21 : FROM alpine:3.6 as build
 ---> a9277cb286bb
Step 2/21 : RUN apk add --no-cache     automake     autoconf     gettext     gettext-dev     git     pkgconfig     libtool     libc-dev     linux-headers     gcc     make     cmake
 ---> Running in cbb323f90dc7
fetch http://dl-cdn.alpinelinux.org/alpine/v3.6/main/aarch64/APKINDEX.tar.gz
fetch http://dl-cdn.alpinelinux.org/alpine/v3.6/community/aarch64/APKINDEX.tar.gz
(1/51) Upgrading musl (1.1.16-r9 -> 1.1.16-r14)
(2/51) Installing m4 (1.4.18-r0)
(3/51) Installing libbz2 (1.0.6-r5)
(4/51) Installing perl (5.24.4-r0)
(5/51) Installing autoconf (2.69-r0)
(6/51) Installing automake (1.15.1-r0)
(7/51) Installing libattr (2.4.47-r6)
(8/51) Installing libacl (2.2.52-r3)
(9/51) Installing expat (2.2.0-r1)
(10/51) Installing lz4-libs (1.7.5-r0)
(11/51) Installing xz-libs (5.2.3-r0)
(12/51) Installing libarchive (3.3.1-r2)
(13/51) Installing ca-certificates (20161130-r2)
(14/51) Installing libssh2 (1.8.0-r1)
(15/51) Installing libcurl (7.61.0-r0)
(16/51) Installing ncurses-terminfo-base (6.0_p20171125-r0)
(17/51) Installing ncurses-terminfo (6.0_p20171125-r0)
(18/51) Installing ncurses-libs (6.0_p20171125-r0)
(19/51) Installing libgcc (6.3.0-r4)
(20/51) Installing libstdc++ (6.3.0-r4)
(21/51) Installing jsoncpp (1.8.0-r0)
(22/51) Installing libuv (1.11.0-r1)
(23/51) Installing cmake (3.8.1-r0)
(24/51) Installing binutils-libs (2.30-r1)
(25/51) Installing binutils (2.30-r1)
(26/51) Installing gmp (6.1.2-r0)
(27/51) Installing isl (0.17.1-r0)
(28/51) Installing libgomp (6.3.0-r4)
(29/51) Installing libatomic (6.3.0-r4)
(30/51) Installing pkgconf (1.3.7-r0)
(31/51) Installing mpfr3 (3.1.5-r0)
(32/51) Installing mpc1 (1.0.3-r0)
(33/51) Installing gcc (6.3.0-r4)
(34/51) Installing libintl (0.19.8.1-r1)
(35/51) Installing libunistring (0.9.7-r0)
(36/51) Installing libxml2 (2.9.5-r0)
(37/51) Installing gettext (0.19.8.1-r1)
(38/51) Installing gettext-asprintf (0.19.8.1-r1)
(39/51) Installing gettext-libs (0.19.8.1-r1)
(40/51) Installing gettext-dev (0.19.8.1-r1)
(41/51) Installing pcre (8.41-r0)
(42/51) Installing git (2.13.7-r0)
(43/51) Installing musl-dev (1.1.16-r14)
(44/51) Installing libc-dev (0.7.1-r0)
(45/51) Upgrading musl-utils (1.1.16-r9 -> 1.1.16-r14)
(46/51) Installing readline (6.3.008-r5)
(47/51) Installing bash (4.3.48-r1)
Executing bash-4.3.48-r1.post-install
(48/51) Installing libltdl (2.4.6-r1)
(49/51) Installing libtool (2.4.6-r1)
(50/51) Installing linux-headers (4.4.6-r2)
(51/51) Installing make (4.2.1-r0)
Executing busybox-1.26.2-r5.trigger
Executing ca-certificates-20161130-r2.trigger
OK: 192 MiB in 60 packages
 ---> 35ddf6a125a0
Removing intermediate container cbb323f90dc7
Step 3/21 : WORKDIR /
 ---> 57f1a66a24f5
Removing intermediate container 05574f49cbd2
Step 4/21 : RUN git clone https://git.openwrt.org/project/uqmi.git
 ---> Running in 47f5ae064326
[91mCloning into 'uqmi'...
[0m ---> 00a534fc1bbe
Removing intermediate container 47f5ae064326
Step 5/21 : RUN git clone https://git.openwrt.org/project/libubox.git
 ---> Running in 0528dbe726b4
[91mCloning into 'libubox'...
[0m ---> 576d06927757
Removing intermediate container 0528dbe726b4
Step 6/21 : RUN git clone https://github.com/json-c/json-c.git
 ---> Running in 33696caa921d
[91mCloning into 'json-c'...
[0m ---> 20b48e70ac33
Removing intermediate container 33696caa921d
Step 7/21 : WORKDIR /json-c
 ---> 5f82c44f2b8b
Removing intermediate container ba87374b17aa
Step 8/21 : RUN ./autogen.sh && ./configure && make install
 ---> Running in 6dac0a96dd56
[91mautoreconf: Entering directory `.'
[0m[91mautoreconf: configure.ac: not using Gettext
[0m[91mautoreconf: running: aclocal -I autoconf-archive/m4
[0m[91mautoreconf: configure.ac: tracing
[0m[91mautoreconf: running: libtoolize --copy
[0mlibtoolize: putting auxiliary files in '.'.
libtoolize: copying file './ltmain.sh'
libtoolize: putting macros in AC_CONFIG_MACRO_DIRS, 'autoconf-archive/m4'.
libtoolize: copying file 'autoconf-archive/m4/libtool.m4'
libtoolize: copying file 'autoconf-archive/m4/ltoptions.m4'
libtoolize: copying file 'autoconf-archive/m4/ltsugar.m4'
libtoolize: copying file 'autoconf-archive/m4/ltversion.m4'
libtoolize: copying file 'autoconf-archive/m4/lt~obsolete.m4'
[91mautoreconf: running: /usr/bin/autoconf
[0m[91mautoreconf: running: /usr/bin/autoheader
[0m[91mautoreconf: running: automake --add-missing --copy --no-force
[0m[91mconfigure.ac:50: installing './compile'
[0m[91mconfigure.ac:12: installing './config.guess'
[0m[91mconfigure.ac:12: installing './config.sub'
[0m[91mconfigure.ac:6: installing './install-sh'
[0m[91mconfigure.ac:6: installing './missing'
[0m[91mMakefile.am: installing './depcomp'
[0m[91mparallel-tests: installing './test-driver'
[0m[91mautoreconf: Leaving directory `.'
[0mchecking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for a thread-safe mkdir -p... ./install-sh -c -d
checking for gawk... no
checking for mawk... no
checking for nawk... no
checking for awk... awk
checking whether make sets $(MAKE)... yes
checking whether make supports nested variables... yes
checking whether make sets $(MAKE)... (cached) yes
checking build system type... aarch64-unknown-linux-gnu
checking host system type... aarch64-unknown-linux-gnu
Multi-threaded support disabled. Use --enable-threading to enable.
RDRAND Hardware RNG Hash Seed disabled. Use --enable-rdrand to enable
checking whether make supports nested variables... (cached) yes
checking for style of include used by make... GNU
checking for gcc... gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking whether gcc understands -c and -o together... yes
checking dependency style of gcc... gcc3
checking for gcc option to accept ISO C99... none needed
checking how to run the C preprocessor... gcc -E
checking for grep that handles long lines and -e... /bin/grep
checking for egrep... /bin/grep -E
checking for ANSI C header files... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking fcntl.h usability... yes
checking fcntl.h presence... yes
checking for fcntl.h... yes
checking limits.h usability... yes
checking limits.h presence... yes
checking for limits.h... yes
checking for strings.h... (cached) yes
checking syslog.h usability... yes
checking syslog.h presence... yes
checking for syslog.h... yes
checking for unistd.h... (cached) yes
checking sys/cdefs.h usability... no
checking sys/cdefs.h presence... no
checking for sys/cdefs.h... no
checking sys/param.h usability... yes
checking sys/param.h presence... yes
checking for sys/param.h... yes
checking stdarg.h usability... yes
checking stdarg.h presence... yes
checking for stdarg.h... yes
checking locale.h usability... yes
checking locale.h presence... yes
checking for locale.h... yes
checking xlocale.h usability... no
checking xlocale.h presence... no
checking for xlocale.h... no
checking endian.h usability... yes
checking endian.h presence... yes
checking for endian.h... yes
checking for inttypes.h... (cached) yes
checking for an ANSI C-conforming const... yes
checking for size_t... yes
checking for __thread support... yes
checking for vprintf... yes
checking for _doprnt... no
checking for working memcmp... yes
checking for realloc... yes
checking for strcasecmp... yes
checking for strdup... yes
checking for strerror... yes
checking for snprintf... yes
checking for vsnprintf... yes
checking for vasprintf... yes
checking for open... yes
checking for vsyslog... yes
checking for strncasecmp... yes
checking for setlocale... yes
checking whether INFINITY is declared... yes
checking whether nan is declared... yes
checking whether isnan is declared... yes
checking whether isinf is declared... yes
checking whether _isnan is declared... no
checking whether _finite is declared... no
checking for GCC atomic builtins... yes
checking for uselocale... yes
checking if .gnu.warning accepts long strings... no
checking how to print strings... printf
checking for a sed that does not truncate output... /bin/sed
checking for fgrep... /bin/grep -F
checking for ld used by gcc... /usr/aarch64-alpine-linux-musl/bin/ld
checking if the linker (/usr/aarch64-alpine-linux-musl/bin/ld) is GNU ld... yes
checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
checking the name lister (/usr/bin/nm -B) interface... BSD nm
checking whether ln -s works... yes
checking the maximum length of command line arguments... 98304
checking how to convert aarch64-unknown-linux-gnu file names to aarch64-unknown-linux-gnu format... func_convert_file_noop
checking how to convert aarch64-unknown-linux-gnu file names to toolchain format... func_convert_file_noop
checking for /usr/aarch64-alpine-linux-musl/bin/ld option to reload object files... -r
checking for objdump... objdump
checking how to recognize dependent libraries... pass_all
checking for dlltool... no
checking how to associate runtime and link libraries... printf %s\n
checking for ar... ar
checking for archiver @FILE support... @
checking for strip... strip
checking for ranlib... ranlib
checking command to parse /usr/bin/nm -B output from gcc object... ok
checking for sysroot... no
checking for a working dd... /bin/dd
checking how to truncate binary pipes... /bin/dd bs=4096 count=1
checking for mt... no
checking if : is a manifest tool... no
checking for dlfcn.h... yes
checking for objdir... .libs
checking if gcc supports -fno-rtti -fno-exceptions... no
checking for gcc option to produce PIC... -fPIC -DPIC
checking if gcc PIC flag -fPIC -DPIC works... yes
checking if gcc static flag -static works... yes
checking if gcc supports -c -o file.o... yes
checking if gcc supports -c -o file.o... (cached) yes
checking whether the gcc linker (/usr/aarch64-alpine-linux-musl/bin/ld) supports shared libraries... yes
checking whether -lc should be explicitly linked in... no
checking dynamic linker characteristics... GNU/Linux ld.so
checking how to hardcode library paths into programs... immediate
checking whether stripping libraries is possible... yes
checking if libtool supports shared libraries... yes
checking whether to build shared libraries... yes
checking whether to build static libraries... yes
checking for -Bsymbolic-functions linker flag... yes
checking whether C compiler accepts -Wall... yes
checking whether C compiler accepts -Werror... yes
checking whether C compiler accepts -Wcast-qual... yes
checking whether C compiler accepts -Wno-error=deprecated-declarations... yes
checking whether C compiler accepts -Wextra... yes
checking whether C compiler accepts -Wwrite-string... no
checking whether C compiler accepts -Wno-unused-parameter... yes
checking whether C compiler accepts -D_GNU_SOURCE... yes
checking for compatibility with _REENTRANT and toolchain headers... yes
checking whether C compiler accepts -D_REENTRANT... yes
checking size of int... 4
checking size of long... 8
checking size of long long... 8
checking size of size_t... 8
checking size of int64_t... 8
checking that generated files are newer than configure... done
configure: creating ./config.status
config.status: creating Makefile
config.status: creating json-c.pc
config.status: creating tests/Makefile
config.status: creating json-c-uninstalled.pc
config.status: creating config.h
config.status: creating json_config.h
config.status: executing depfiles commands
config.status: executing libtool commands
Making install in .
make[1]: Entering directory '/json-c'
  CC       arraylist.lo
  CC       debug.lo
  CC       json_c_version.lo
  CC       json_object.lo
  CC       json_object_iterator.lo
  CC       json_pointer.lo
  CC       json_tokener.lo
  CC       json_util.lo
  CC       json_visit.lo
  CC       linkhash.lo
  CC       printbuf.lo
  CC       random_seed.lo
  CC       strerror_override.lo
  CCLD     libjson-c.la
[91mar: `u' modifier ignored since `D' is the default (see `U')
[0mmake[2]: Entering directory '/json-c'
 ./install-sh -c -d '/usr/local/lib'
 /bin/bash ./libtool   --mode=install /usr/bin/install -c   libjson-c.la '/usr/local/lib'
libtool: install: /usr/bin/install -c .libs/libjson-c.so.4.0.0 /usr/local/lib/libjson-c.so.4.0.0
libtool: install: (cd /usr/local/lib && { ln -s -f libjson-c.so.4.0.0 libjson-c.so.4 || { rm -f libjson-c.so.4 && ln -s libjson-c.so.4.0.0 libjson-c.so.4; }; })
libtool: install: (cd /usr/local/lib && { ln -s -f libjson-c.so.4.0.0 libjson-c.so || { rm -f libjson-c.so && ln -s libjson-c.so.4.0.0 libjson-c.so; }; })
libtool: install: /usr/bin/install -c .libs/libjson-c.lai /usr/local/lib/libjson-c.la
libtool: install: /usr/bin/install -c .libs/libjson-c.a /usr/local/lib/libjson-c.a
libtool: install: chmod 644 /usr/local/lib/libjson-c.a
libtool: install: ranlib /usr/local/lib/libjson-c.a
libtool: finish: PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/sbin" ldconfig -n /usr/local/lib
----------------------------------------------------------------------
Libraries have been installed in:
   /usr/local/lib

If you ever happen to want to link against installed libraries
in a given directory, LIBDIR, you must either use libtool, and
specify the full pathname of the library, or use the '-LLIBDIR'
flag during linking and do at least one of the following:
   - add LIBDIR to the 'LD_LIBRARY_PATH' environment variable
     during execution
   - add LIBDIR to the 'LD_RUN_PATH' environment variable
     during linking
   - use the '-Wl,-rpath -Wl,LIBDIR' linker flag

See any operating system documentation about shared libraries for
more information, such as the ld(1) and ld.so(8) manual pages.
----------------------------------------------------------------------
 ./install-sh -c -d '/usr/local/include/json-c'
 /usr/bin/install -c -m 644 arraylist.h debug.h json.h json_c_version.h json_config.h json_inttypes.h json_object.h json_object_iterator.h json_pointer.h json_tokener.h json_util.h json_visit.h linkhash.h printbuf.h '/usr/local/include/json-c'
 ./install-sh -c -d '/usr/local/lib/pkgconfig'
 /usr/bin/install -c -m 644 json-c.pc '/usr/local/lib/pkgconfig'
make[2]: Leaving directory '/json-c'
make[1]: Leaving directory '/json-c'
Making install in tests
make[1]: Entering directory '/json-c/tests'
make[2]: Entering directory '/json-c/tests'
make[2]: Nothing to be done for 'install-exec-am'.
make[2]: Nothing to be done for 'install-data-am'.
make[2]: Leaving directory '/json-c/tests'
make[1]: Leaving directory '/json-c/tests'
 ---> 04e596a03450
Removing intermediate container 6dac0a96dd56
Step 9/21 : WORKDIR /libubox
 ---> ee76ba6a35a6
Removing intermediate container 522625d4943e
Step 10/21 : RUN cmake . -DBUILD_LUA=OFF -DBUILD_EXAMPLES=OFF && make install
 ---> Running in fbce047144f9
-- The C compiler identification is GNU 6.3.0
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Found PkgConfig: /usr/bin/pkg-config (found version "1.3.7") 
-- Checking for one of the modules 'json-c'
-- Looking for clock_gettime
-- Looking for clock_gettime - found
-- Checking for one of the modules 'lua5.1;lua-5.1'
-- Configuring done
-- Generating done
-- Build files have been written to: /libubox
Scanning dependencies of target blobmsg_json-static
[  2%] Building C object CMakeFiles/blobmsg_json-static.dir/blobmsg_json.c.o
[  4%] Linking C static library libblobmsg_json.a
[  4%] Built target blobmsg_json-static
Scanning dependencies of target ubox-static
[  7%] Building C object CMakeFiles/ubox-static.dir/avl.c.o
[  9%] Building C object CMakeFiles/ubox-static.dir/avl-cmp.c.o
[ 11%] Building C object CMakeFiles/ubox-static.dir/blob.c.o
[ 14%] Building C object CMakeFiles/ubox-static.dir/blobmsg.c.o
[ 16%] Building C object CMakeFiles/ubox-static.dir/uloop.c.o
[ 19%] Building C object CMakeFiles/ubox-static.dir/usock.c.o
[ 21%] Building C object CMakeFiles/ubox-static.dir/ustream.c.o
[ 23%] Building C object CMakeFiles/ubox-static.dir/ustream-fd.c.o
[ 26%] Building C object CMakeFiles/ubox-static.dir/vlist.c.o
[ 28%] Building C object CMakeFiles/ubox-static.dir/utils.c.o
[ 30%] Building C object CMakeFiles/ubox-static.dir/safe_list.c.o
[ 33%] Building C object CMakeFiles/ubox-static.dir/runqueue.c.o
[ 35%] Building C object CMakeFiles/ubox-static.dir/md5.c.o
[ 38%] Building C object CMakeFiles/ubox-static.dir/kvlist.c.o
[ 40%] Building C object CMakeFiles/ubox-static.dir/ulog.c.o
[ 42%] Building C object CMakeFiles/ubox-static.dir/base64.c.o
[ 45%] Linking C static library libubox.a
[ 45%] Built target ubox-static
Scanning dependencies of target ubox
[ 47%] Building C object CMakeFiles/ubox.dir/avl.c.o
[ 50%] Building C object CMakeFiles/ubox.dir/avl-cmp.c.o
[ 52%] Building C object CMakeFiles/ubox.dir/blob.c.o
[ 54%] Building C object CMakeFiles/ubox.dir/blobmsg.c.o
[ 57%] Building C object CMakeFiles/ubox.dir/uloop.c.o
[ 59%] Building C object CMakeFiles/ubox.dir/usock.c.o
[ 61%] Building C object CMakeFiles/ubox.dir/ustream.c.o
[ 64%] Building C object CMakeFiles/ubox.dir/ustream-fd.c.o
[ 66%] Building C object CMakeFiles/ubox.dir/vlist.c.o
[ 69%] Building C object CMakeFiles/ubox.dir/utils.c.o
[ 71%] Building C object CMakeFiles/ubox.dir/safe_list.c.o
[ 73%] Building C object CMakeFiles/ubox.dir/runqueue.c.o
[ 76%] Building C object CMakeFiles/ubox.dir/md5.c.o
[ 78%] Building C object CMakeFiles/ubox.dir/kvlist.c.o
[ 80%] Building C object CMakeFiles/ubox.dir/ulog.c.o
[ 83%] Building C object CMakeFiles/ubox.dir/base64.c.o
[ 85%] Linking C shared library libubox.so
[ 85%] Built target ubox
Scanning dependencies of target blobmsg_json
[ 88%] Building C object CMakeFiles/blobmsg_json.dir/blobmsg_json.c.o
[ 90%] Linking C shared library libblobmsg_json.so
[ 90%] Built target blobmsg_json
Scanning dependencies of target jshn
[ 92%] Building C object CMakeFiles/jshn.dir/jshn.c.o
[ 95%] Linking C executable jshn
[ 95%] Built target jshn
Scanning dependencies of target json_script
[ 97%] Building C object CMakeFiles/json_script.dir/json_script.c.o
[100%] Linking C shared library libjson_script.so
[100%] Built target json_script
Install the project...
-- Install configuration: ""
-- Installing: /usr/local/include/libubox/avl-cmp.h
-- Installing: /usr/local/include/libubox/avl.h
-- Installing: /usr/local/include/libubox/blob.h
-- Installing: /usr/local/include/libubox/blobmsg.h
-- Installing: /usr/local/include/libubox/blobmsg_json.h
-- Installing: /usr/local/include/libubox/json_script.h
-- Installing: /usr/local/include/libubox/kvlist.h
-- Installing: /usr/local/include/libubox/list.h
-- Installing: /usr/local/include/libubox/md5.h
-- Installing: /usr/local/include/libubox/runqueue.h
-- Installing: /usr/local/include/libubox/safe_list.h
-- Installing: /usr/local/include/libubox/ulog.h
-- Installing: /usr/local/include/libubox/uloop.h
-- Installing: /usr/local/include/libubox/usock.h
-- Installing: /usr/local/include/libubox/ustream.h
-- Installing: /usr/local/include/libubox/utils.h
-- Installing: /usr/local/include/libubox/vlist.h
-- Installing: /usr/local/lib/libubox.so
-- Installing: /usr/local/lib/libubox.a
-- Installing: /usr/local/lib/libblobmsg_json.so
-- Set runtime path of "/usr/local/lib/libblobmsg_json.so" to ""
-- Installing: /usr/local/lib/libblobmsg_json.a
-- Installing: /usr/local/bin/jshn
-- Set runtime path of "/usr/local/bin/jshn" to ""
-- Installing: /usr/local/lib/libjson_script.so
-- Set runtime path of "/usr/local/lib/libjson_script.so" to ""
-- Installing: /usr/local/share/libubox/jshn.sh
 ---> 4b25be48914e
Removing intermediate container fbce047144f9
Step 11/21 : WORKDIR /uqmi
 ---> 587455ac5dc8
Removing intermediate container cee3716b634d
Step 12/21 : RUN cmake -DBUILD_STATIC=true . && make
 ---> Running in 9f2db2958039
-- The C compiler identification is GNU 6.3.0
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Configuring done
-- Generating done
-- Build files have been written to: /uqmi
Scanning dependencies of target gen-headers
[  3%] Generating qmi-message-ctl.h
[  6%] Generating qmi-message-dms.h
[  9%] Generating qmi-message-nas.h
[ 12%] Generating qmi-message-pds.h
[ 16%] Generating qmi-message-wds.h
[ 19%] Generating qmi-message-wms.h
[ 22%] Generating qmi-message-wda.h
[ 25%] Generating qmi-message-uim.h
[ 25%] Built target gen-headers
Scanning dependencies of target gen-errors
[ 29%] Generating qmi-errors.c
[ 29%] Built target gen-errors
[ 32%] Generating qmi-message-uim.c
[ 35%] Generating qmi-message-ctl.c
[ 38%] Generating qmi-message-dms.c
[ 41%] Generating qmi-message-nas.c
[ 45%] Generating qmi-message-pds.c
[ 48%] Generating qmi-message-wds.c
[ 51%] Generating qmi-message-wms.c
[ 54%] Generating qmi-message-wda.c
Scanning dependencies of target uqmi
[ 58%] Building C object CMakeFiles/uqmi.dir/main.c.o
[ 61%] Building C object CMakeFiles/uqmi.dir/dev.c.o
[ 64%] Building C object CMakeFiles/uqmi.dir/commands.c.o
[ 67%] Building C object CMakeFiles/uqmi.dir/qmi-message.c.o
[ 70%] Building C object CMakeFiles/uqmi.dir/mbim.c.o
[ 74%] Building C object CMakeFiles/uqmi.dir/qmi-message-ctl.c.o
[ 77%] Building C object CMakeFiles/uqmi.dir/qmi-message-dms.c.o
[ 80%] Building C object CMakeFiles/uqmi.dir/qmi-message-nas.c.o
[ 83%] Building C object CMakeFiles/uqmi.dir/qmi-message-pds.c.o
[ 87%] Building C object CMakeFiles/uqmi.dir/qmi-message-wds.c.o
[ 90%] Building C object CMakeFiles/uqmi.dir/qmi-message-wms.c.o
[ 93%] Building C object CMakeFiles/uqmi.dir/qmi-message-wda.c.o
[ 96%] Building C object CMakeFiles/uqmi.dir/qmi-message-uim.c.o
[100%] Linking C executable uqmi
[100%] Built target uqmi
 ---> e32273922173
Removing intermediate container 9f2db2958039
Step 13/21 : FROM alpine:3.6
 ---> a9277cb286bb
Step 14/21 : RUN apk add --no-cache ppp jq
 ---> Running in 49a0e8eb1d5c
fetch http://dl-cdn.alpinelinux.org/alpine/v3.6/main/aarch64/APKINDEX.tar.gz
fetch http://dl-cdn.alpinelinux.org/alpine/v3.6/community/aarch64/APKINDEX.tar.gz
(1/13) Installing oniguruma (6.3.0-r0)
(2/13) Installing jq (1.5-r4)
(3/13) Installing ppp-chat (2.4.7-r5)
(4/13) Installing ppp-daemon (2.4.7-r5)
(5/13) Installing ppp-radius (2.4.7-r5)
(6/13) Installing ppp-atm (2.4.7-r5)
(7/13) Installing ppp-pppoe (2.4.7-r5)
(8/13) Installing ppp-l2tp (2.4.7-r5)
(9/13) Installing ppp-winbind (2.4.7-r5)
(10/13) Installing ppp-passprompt (2.4.7-r5)
(11/13) Installing ppp-passwordfd (2.4.7-r5)
(12/13) Installing ppp-minconn (2.4.7-r5)
(13/13) Installing ppp (2.4.7-r5)
Executing busybox-1.26.2-r5.trigger
OK: 6 MiB in 24 packages
 ---> f2b503ab747d
Removing intermediate container 49a0e8eb1d5c
Step 15/21 : ENTRYPOINT
 ---> Running in 94941e4665cf
 ---> 29d46307898a
Removing intermediate container 94941e4665cf
Step 16/21 : WORKDIR /
 ---> bfce56a79dbe
Removing intermediate container db6ae105433c
Step 17/21 : COPY --from=build /uqmi/uqmi /bin
 ---> 0d0d99ec08d7
Step 18/21 : COPY usr/ /usr/
 ---> b7f1b61edfc4
Step 19/21 : COPY etc/ /etc/
 ---> 88780e94bf94
Step 20/21 : CMD /usr/bin/wwan-init.sh
 ---> Running in c7ac2b21252a
 ---> c9fdb6495258
Removing intermediate container c7ac2b21252a
Step 21/21 : LABEL org.mobyproject.config '{"capabilities":["all"],"binds":["/lib/modules:/lib/modules","/dev:/dev","/run:/run"],"net":"host"}' org.mobyproject.linuxkit.revision 'unknown' org.mobyproject.linuxkit.version 'unknown' org.opencontainers.image.revision '5388aac66a03f908026e0e00dd1493611fc83e28' org.opencontainers.image.source 'https://github.com/linuxkit/linuxkit'
 ---> Running in bd9c05ad8ce0
 ---> a8d862b18a0a
Removing intermediate container bd9c05ad8ce0
Successfully built a8d862b18a0a
Successfully tagged zededa/wwan:5f68442251df0f2625fde14e947f11de2374b72d-arm64
Pushing zededa/wwan:5f68442251df0f2625fde14e947f11de2374b72d-arm64
The push refers to a repository [docker.io/zededa/wwan]
d11235919ab8: Preparing
32d077cacd33: Preparing
d0f85a4d5145: Preparing
3ecc90cb7913: Preparing
7678a2257549: Preparing
199db0687ace: Preparing
199db0687ace: Waiting
7678a2257549: Layer already exists
199db0687ace: Layer already exists
d11235919ab8: Pushed
32d077cacd33: Pushed
d0f85a4d5145: Pushed
3ecc90cb7913: Pushed
5f68442251df0f2625fde14e947f11de2374b72d-arm64: digest: sha256:615f01d73c17af407449d84dbcfe46a38c97856546f68213723a4f3133f60d73 size: 1571
Pushing zededa/wwan:5f68442251df0f2625fde14e947f11de2374b72d-arm64 to manifest zededa/wwan:5f68442251df0f2625fde14e947f11de2374b72d
time="2018-07-27T08:05:48+02:00" level=warning msg="Couldn't find or access image reference \"zededa/wwan:5f68442251df0f2625fde14e947f11de2374b72d-s390x\". Skipping image."
Digest: sha256:3eb40eac8c01f3e8a5d96a55f497ddc28660ae2990d178ef217e31496c43a2ac 743
Not signing zededa/wwan:5f68442251df0f2625fde14e947f11de2374b72d
Build and push complete, not releasing, all done.
Building and pushing "zededa/wlan:cfd366430df0620df11b2af7f3d9d63d617a5903"
cfd366430df0620df11b2af7f3d9d63d617a5903: Pulling from zededa/wlan
Digest: sha256:2730d20f93a0b3d0a8407f861ca422ec0c65bbe22979c48a0e210937e8233bcf
Status: Image is up to date for zededa/wlan:cfd366430df0620df11b2af7f3d9d63d617a5903
Building and pushing "zededa/watchdog:3e77cbcffbf4f71309bab82500039967bca0d189"
3e77cbcffbf4f71309bab82500039967bca0d189: Pulling from zededa/watchdog
Digest: sha256:588746a44b6a88f60545e5714f7da409299419f93632e2b95db8485fb0b9b2aa
Status: Image is up to date for zededa/watchdog:3e77cbcffbf4f71309bab82500039967bca0d189
Building and pushing "zededa/device-trees:1bca882c64827de08bba9aa7713441b2b4d7ca8d"
1bca882c64827de08bba9aa7713441b2b4d7ca8d: Pulling from zededa/device-trees
Digest: sha256:aed7c0450c81e89299a50e566e4120c50e3cc8d88fa1c4ea70029e88c0721173
Status: Image is up to date for zededa/device-trees:1bca882c64827de08bba9aa7713441b2b4d7ca8d
Building and pushing "zededa/zedctr:a190fe1816a81a9f328417bcef9146dff0a4ede0"
a190fe1816a81a9f328417bcef9146dff0a4ede0: Pulling from zededa/zedctr
Digest: sha256:db34434e738a25e519b82d3aab2c2e90bb8afb977bb12222416050bce8b3260a
Status: Downloaded newer image for zededa/zedctr:a190fe1816a81a9f328417bcef9146dff0a4ede0
Building and pushing "zededa/conf:4992a3a63c95b0e446c681a0deaca7a071aba709"
4992a3a63c95b0e446c681a0deaca7a071aba709: Pulling from zededa/conf
Digest: sha256:cadca07f76dce08d68f9f56b7c6a9e3fabe7171c9abc18d1cd5232aab6af5ef8
Status: Image is up to date for zededa/conf:4992a3a63c95b0e446c681a0deaca7a071aba709
Building and pushing "zededa/mkrootfs-ext4:5f77cd6a2b87a3a9927593763da1941dbed1ce80"
5f77cd6a2b87a3a9927593763da1941dbed1ce80: Pulling from zededa/mkrootfs-ext4
Digest: sha256:29bd009688afd31b5c7a782501d51eeb4c88e1a95eaf17fb9c89052041e93649
Status: Image is up to date for zededa/mkrootfs-ext4:5f77cd6a2b87a3a9927593763da1941dbed1ce80
Building and pushing "zededa/mkrootfs-squash:b47d705603f5f0d3765b03cf583e1a7fd287f212"
b47d705603f5f0d3765b03cf583e1a7fd287f212: Pulling from zededa/mkrootfs-squash
Digest: sha256:d41f0d59d728521da01cbf8966245f9eea5e150d7a7385e582691bbedc2c1a60
Status: Image is up to date for zededa/mkrootfs-squash:b47d705603f5f0d3765b03cf583e1a7fd287f212
Building and pushing "zededa/mkflash:d4131c74a9e283a1e4ee5f3aa80b47b538378411"
d4131c74a9e283a1e4ee5f3aa80b47b538378411: Pulling from zededa/mkflash
Digest: sha256:5b4d19a44a0f16e0792f94bca779b58c149165d0b2026ed6df53c06d26f8ee75
Status: Image is up to date for zededa/mkflash:d4131c74a9e283a1e4ee5f3aa80b47b538378411
Building and pushing "zededa/mkimage-iso-efi:49a6ff8320ce088460c8acb6f36bc15b15d800e9"
49a6ff8320ce088460c8acb6f36bc15b15d800e9: Pulling from zededa/mkimage-iso-efi
Digest: sha256:760a50e43c276bda9389a1dd150602e4ebede6b04d49189c53007ee8404e16bf
Status: Image is up to date for zededa/mkimage-iso-efi:49a6ff8320ce088460c8acb6f36bc15b15d800e9
make: Leaving directory '/home/zededa-ci/src/zenbuild/pkg'
make: Entering directory '/home/zededa-ci/src/zenbuild/pkg'
(cd ..; ./parse-pkgs.sh pkg/zedctr//Dockerfile.in > pkg/zedctr//Dockerfile)
Building and pushing "zededa/zedctr:a190fe1816a81a9f328417bcef9146dff0a4ede0"
Sending build context to Docker daemon  17.92kB
Step 1/20 : FROM zededa/ztools:latest as ztools
 ---> 6341cd92336a
Step 2/20 : FROM zededa/xen-tools:ccc3ab24a38b4680bdbe4c204cc628026e7584a7-arm64 as xen-tools
 ---> 9338796f340c
Step 3/20 : FROM zededa/dnsmasq:e2de7e6a478850d931724f951f877cd507d77358-arm64 as dnsmasq
 ---> 1a0a9313ef5f
Step 4/20 : FROM zededa/strongswan:3957eaaa64beb65e946494bab989e861f34811cb-arm64 as strongswan
 ---> c9bc0d3f0642
Step 5/20 : FROM zededa/gpt-tools:f0be39997551891e81c6edc38acc20f61077287b-arm64 as gpttools
 ---> bb17a51a6442
Step 6/20 : FROM zededa/watchdog:3e77cbcffbf4f71309bab82500039967bca0d189-arm64 as watchdog
 ---> 57e0cb5696a7
Step 7/20 : FROM alpine:3.6
 ---> a9277cb286bb
Step 8/20 : RUN apk add --no-cache     yajl xz bash openssl iptables ip6tables iproute2     apk-cron coreutils dmidecode sudo libbz2 libuuid ipset     libpcap libaio logrotate pixman glib curl radvd perl ethtool     openssh-server util-linux e2fsprogs libcrypto1.0
 ---> Running in 6280724e008b
fetch http://dl-cdn.alpinelinux.org/alpine/v3.6/main/aarch64/APKINDEX.tar.gz
fetch http://dl-cdn.alpinelinux.org/alpine/v3.6/community/aarch64/APKINDEX.tar.gz
(1/53) Installing apk-cron (1.0-r0)
(2/53) Installing ncurses-terminfo-base (6.0_p20171125-r0)
(3/53) Installing ncurses-terminfo (6.0_p20171125-r0)
(4/53) Installing ncurses-libs (6.0_p20171125-r0)
(5/53) Installing readline (6.3.008-r5)
(6/53) Installing bash (4.3.48-r1)
Executing bash-4.3.48-r1.post-install
(7/53) Installing libattr (2.4.47-r6)
(8/53) Installing libacl (2.2.52-r3)
(9/53) Installing coreutils (8.27-r0)
(10/53) Installing ca-certificates (20161130-r2)
(11/53) Installing libssh2 (1.8.0-r1)
(12/53) Installing libcurl (7.61.0-r0)
(13/53) Installing curl (7.61.0-r0)
(14/53) Installing dmidecode (3.0-r0)
(15/53) Installing libuuid (2.28.2-r2)
(16/53) Installing libblkid (2.28.2-r2)
(17/53) Installing libcom_err (1.43.4-r0)
(18/53) Installing e2fsprogs-libs (1.43.4-r0)
(19/53) Installing e2fsprogs (1.43.4-r0)
(20/53) Installing ethtool (4.10-r0)
(21/53) Installing libffi (3.2.1-r3)
(22/53) Installing libintl (0.19.8.1-r1)
(23/53) Installing libmount (2.28.2-r2)
(24/53) Installing pcre (8.41-r0)
(25/53) Installing glib (2.52.1-r0)
(26/53) Installing libmnl (1.0.4-r0)
(27/53) Installing libnftnl-libs (1.0.7-r0)
(28/53) Installing iptables (1.6.1-r0)
(29/53) Installing ip6tables (1.6.1-r0)
(30/53) Installing libelf (0.8.13-r2)
(31/53) Installing iproute2 (4.10.0-r1)
Executing iproute2-4.10.0-r1.post-install
(32/53) Installing ipset (6.32-r3)
(33/53) Installing libaio (0.3.110-r0)
(34/53) Installing libbz2 (1.0.6-r5)
(35/53) Installing libcrypto1.0 (1.0.2o-r1)
(36/53) Installing libpcap (1.8.1-r0)
(37/53) Installing popt (1.16-r6)
(38/53) Installing logrotate (3.12.2-r0)
(39/53) Installing openssh-keygen (7.5_p1-r2)
(40/53) Installing openssh-server (7.5_p1-r2)
(41/53) Installing libssl1.0 (1.0.2o-r1)
(42/53) Installing openssl (1.0.2o-r1)
(43/53) Installing perl (5.24.4-r0)
(44/53) Installing pixman (0.34.0-r0)
(45/53) Installing radvd (2.15-r0)
Executing radvd-2.15-r0.pre-install
(46/53) Installing sudo (1.8.19_p2-r0)
(47/53) Installing libsmartcols (2.28.2-r2)
(48/53) Installing findmnt (2.28.2-r2)
(49/53) Installing libfdisk (2.28.2-r2)
(50/53) Installing util-linux (2.28.2-r2)
(51/53) Installing xz-libs (5.2.3-r0)
(52/53) Installing xz (5.2.3-r0)
(53/53) Installing yajl (2.1.0-r0)
Executing busybox-1.26.2-r5.trigger
Executing ca-certificates-20161130-r2.trigger
Executing glib-2.52.1-r0.trigger
OK: 73 MiB in 64 packages
 ---> 8d58964a4e01
Removing intermediate container 6280724e008b
Step 9/20 : RUN [ `uname -m` = "aarch64" ] && apk add --no-cache libfdt || :
 ---> Running in 24d2f0fbda33
fetch http://dl-cdn.alpinelinux.org/alpine/v3.6/main/aarch64/APKINDEX.tar.gz
fetch http://dl-cdn.alpinelinux.org/alpine/v3.6/community/aarch64/APKINDEX.tar.gz
(1/1) Installing libfdt (1.4.4-r0)
OK: 73 MiB in 65 packages
 ---> 5dd56ffd0a74
Removing intermediate container 24d2f0fbda33
Step 10/20 : RUN ln -s libpcap.so.1 /usr/lib/libpcap.so
 ---> Running in db8dc1577318
 ---> 9f2272a5b8d7
Removing intermediate container db8dc1577318
Step 11/20 : RUN ssh-keygen -A ; echo PermitRootLogin yes >> /etc/ssh/sshd_config ; sed -ie '/^root/s#^.*$#root:$6$Ndt1G5AYZFQ8rz7m$7vGZMKKotSYxwxk/.jMfuOCzxw0I3DNedygaQaLF7kYSYsLqiBHhmc8RJSXp8/VxSYPpgYSz/8fkv0hO6I4js.:17477:0:::::#' /etc/shadow
 ---> Running in 05dcdcfb83a8
ssh-keygen: generating new host keys: RSA DSA ECDSA ED25519 
 ---> ae776a974451
Removing intermediate container 05dcdcfb83a8
Step 12/20 : COPY --from=xen-tools / /
 ---> d6e280aed9ed
Step 13/20 : COPY --from=ztools / /
 ---> d3ed25e80297
Step 14/20 : COPY --from=gpttools / /
 ---> 34ce514ab73c
Step 15/20 : COPY --from=dnsmasq /usr/sbin/dnsmasq /opt/zededa/bin/dnsmasq
 ---> 02f307e3a2a2
Step 16/20 : COPY --from=strongswan / /
 ---> b4f4c705ef74
Step 17/20 : COPY --from=watchdog /usr/sbin /usr/sbin
 ---> 2139867d8e5b
Step 18/20 : COPY rootfs/ /
 ---> 3e2b693b72c0
Step 19/20 : CMD /init.sh
 ---> Running in c7c7183e997d
 ---> 010c0af4f0d5
Removing intermediate container c7c7183e997d
Step 20/20 : LABEL org.mobyproject.config '{"capabilities":["all"],"binds":["/dev:/dev","/etc/resolv.conf:/etc/resolv.conf","/run:/run","/var/log:/var/log/dom0","/:/hostfs"],"net":"host","pid":"host"}' org.mobyproject.linuxkit.revision 'unknown' org.mobyproject.linuxkit.version 'unknown' org.opencontainers.image.revision '5388aac66a03f908026e0e00dd1493611fc83e28' org.opencontainers.image.source 'https://github.com/linuxkit/linuxkit'
 ---> Running in ddaecefd3df2
 ---> 834e277a04b6
Removing intermediate container ddaecefd3df2
Successfully built 834e277a04b6
Successfully tagged zededa/zedctr:a190fe1816a81a9f328417bcef9146dff0a4ede0-arm64
Pushing zededa/zedctr:a190fe1816a81a9f328417bcef9146dff0a4ede0-arm64
The push refers to a repository [docker.io/zededa/zedctr]
8d1af99302c6: Preparing
5287b185b8b3: Preparing
2395b6a8a790: Preparing
147469238418: Preparing
3edd81ed8cbc: Preparing
981b7b269978: Preparing
ea863c8b2659: Preparing
b60a0261da23: Preparing
dba761a5fbe4: Preparing
55e7f7e0f4aa: Preparing
181c7d46f784: Preparing
7678a2257549: Preparing
199db0687ace: Preparing
b60a0261da23: Waiting
dba761a5fbe4: Waiting
55e7f7e0f4aa: Waiting
181c7d46f784: Waiting
7678a2257549: Waiting
199db0687ace: Waiting
ea863c8b2659: Waiting
981b7b269978: Waiting
8d1af99302c6: Layer already exists
2395b6a8a790: Layer already exists
3edd81ed8cbc: Layer already exists
981b7b269978: Layer already exists
ea863c8b2659: Layer already exists
5287b185b8b3: Pushed
b60a0261da23: Pushed
7678a2257549: Layer already exists
dba761a5fbe4: Pushed
147469238418: Pushed
199db0687ace: Layer already exists
55e7f7e0f4aa: Pushed
181c7d46f784: Pushed
a190fe1816a81a9f328417bcef9146dff0a4ede0-arm64: digest: sha256:feb014a39bc7bec465d392b70e20f39036d92c87f6bbdb2312b19a35d123b160 size: 3047
Pushing zededa/zedctr:a190fe1816a81a9f328417bcef9146dff0a4ede0-arm64 to manifest zededa/zedctr:a190fe1816a81a9f328417bcef9146dff0a4ede0
time="2018-07-27T08:07:59+02:00" level=warning msg="Couldn't find or access image reference \"zededa/zedctr:a190fe1816a81a9f328417bcef9146dff0a4ede0-s390x\". Skipping image."
Digest: sha256:be047566a790aa5324a86aea8a45bf20eb864d0bd0ca2f27bb52020ed58916a8 743
Not signing zededa/zedctr:a190fe1816a81a9f328417bcef9146dff0a4ede0
Build and push complete, not releasing, all done.
make: Leaving directory '/home/zededa-ci/src/zenbuild/pkg'
make: Entering directory '/home/zededa-ci/src/zenbuild/build-pkgs'
Building and pushing "zededa/build-pkgs_abuild:7ae4d9f9fa290963de466d5ed96d6c9318354824"
7ae4d9f9fa290963de466d5ed96d6c9318354824: Pulling from zededa/build-pkgs_abuild
Digest: sha256:3fac2728d616e49d35e00320cbb0995c2f8aa78b64921eadca02cf67625d1ee9
Status: Image is up to date for zededa/build-pkgs_abuild:7ae4d9f9fa290963de466d5ed96d6c9318354824
Building and pushing "zededa/build-pkgs_uefi:a3362428c518fb4db1a136a961bd17e8a66fb693"
a3362428c518fb4db1a136a961bd17e8a66fb693: Pulling from zededa/build-pkgs_uefi
Digest: sha256:6cd56a5c6c914a56ec3286bce9fdca5feac70e7984aec5a17ebcbea40a8b9877
Status: Image is up to date for zededa/build-pkgs_uefi:a3362428c518fb4db1a136a961bd17e8a66fb693
make: Leaving directory '/home/zededa-ci/src/zenbuild/build-pkgs'
cd bios ; _() { C=`docker create $1 fake` ; docker export $C | tar -xf - $2 ; docker rm $C ; } ; _ zededa/build-pkgs_uefi:a3362428c518fb4db1a136a961bd17e8a66fb693-arm64 OVMF.fd
795d36f97f3ba9109cf0e0b6424de14ef71e2adff0e767a12e4c7473812bf4a0
make -C build-tools all
make[1]: Entering directory '/home/zededa-ci/src/zenbuild/build-tools'
make[1]: Nothing to be done for 'all'.
make[1]: Leaving directory '/home/zededa-ci/src/zenbuild/build-tools'
tee: /dev/tty: No such device or address
a190fe1816a81a9f328417bcef9146dff0a4ede0-arm64: Pulling from zededa/zedctr
Digest: sha256:feb014a39bc7bec465d392b70e20f39036d92c87f6bbdb2312b19a35d123b160
Status: Image is up to date for zededa/zedctr:a190fe1816a81a9f328417bcef9146dff0a4ede0-arm64
DOCKER_ARCH_TAG="arm64" ./parse-pkgs.sh images/installer.yml.in > images/installer.yml
# the following is a horrible hack that needs to go away ASAP
if [ "aarch64" != `uname -m` ] ; then \
           sed -e '/source:/s#rootfs.img#rootfs_aarch64.img#' \
               -e '/command:/s#/dev/sda#/dev/vda#' -i.orig images/installer.yml ;\
   echo "WARNING: We are assembling a aarch64 image on `uname -m`. Things may break." ;\
        fi
DOCKER_ARCH_TAG="arm64" ./parse-pkgs.sh images/rootfs.yml.in > images/rootfs.yml
# the following is a horrible hack that needs to go away ASAP
if [ "aarch64" != `uname -m` ] ; then \
           sed -e '/source:/s#rootfs.img#rootfs_aarch64.img#' \
               -e '/command:/s#/dev/sda#/dev/vda#' -i.orig images/rootfs.yml ;\
   echo "WARNING: We are assembling a aarch64 image on `uname -m`. Things may break." ;\
        fi
./makerootfs.sh images/rootfs.yml squash rootfs_aarch64.img
Extract kernel image: zededa/kernel:e8accf1611206572eef0d8e24fa325e6488bdc7b-arm64
Add init containers:
Process init image: zededa/grub:35eb3c470422d1bced11f3457ea8ff432d9f0590-arm64
Process init image: zededa/device-trees:1bca882c64827de08bba9aa7713441b2b4d7ca8d-arm64
Process init image: zededa/xen:be954dc9ba840dcff92c7edc1823e7e19d12a8ed-arm64
Process init image: zededa/gpt-tools:f0be39997551891e81c6edc38acc20f61077287b-arm64
Process init image: zededa/dom0-ztools:c6d8f2123c748379add5d3dbbac23e3630131760-arm64
Process init image: linuxkit/init:v0.5
Process init image: linuxkit/runc:v0.5
Process init image: linuxkit/containerd:v0.5
Process init image: linuxkit/getty:v0.5
Add onboot containers:
  Create OCI config for linuxkit/sysctl:v0.5
  Create OCI config for linuxkit/modprobe:v0.5
Add service containers:
  Create OCI config for linuxkit/dhcpcd:v0.5
  Create OCI config for linuxkit/openntpd:v0.5
  Create OCI config for zededa/wwan:5f68442251df0f2625fde14e947f11de2374b72d-arm64
  Create OCI config for zededa/wlan:cfd366430df0620df11b2af7f3d9d63d617a5903-arm64
  Create OCI config for zededa/zedctr:a190fe1816a81a9f328417bcef9146dff0a4ede0-arm64
Add files:
  /containers/services/zededa-tools/lower/opt/zededa/bin/versioninfo
Parallel mksquashfs: Using 4 processors
Creating 4.0 filesystem on /rootfs.img, block size 131072.
[====/                                                       ]  1000/14748   6%[===========================================================\] 14748/14748 100%

Exportable Squashfs 4.0 filesystem, gzip compressed, data block size 131072
	compressed data, compressed metadata, compressed fragments, compressed xattrs
	duplicates are removed
Filesystem size 165760.00 Kbytes (161.88 Mbytes)
	31.46% of uncompressed filesystem size (526856.79 Kbytes)
Inode table size 154907 bytes (151.28 Kbytes)
	26.06% of uncompressed inode table size (594352 bytes)
Directory table size 158272 bytes (154.56 Kbytes)
	45.06% of uncompressed directory table size (351268 bytes)
Number of duplicate files found 2491
Number of inodes 15810
Number of files 11566
Number of fragments 788
Number of symbolic links  2944
Number of device nodes 8
Number of fifo nodes 0
Number of socket nodes 0
Number of directories 1292
Number of ids (unique uids + gids) 3
Number of uids 1
	root (0)
Number of gids 3
	root (0)
	shadow (42)
	tty (5)
./makeiso.sh images/installer.yml installer_aarch64.iso
Extract kernel image: zededa/kernel:e8accf1611206572eef0d8e24fa325e6488bdc7b-arm64
Add init containers:
Process init image: zededa/grub:35eb3c470422d1bced11f3457ea8ff432d9f0590-arm64
Process init image: zededa/device-trees:1bca882c64827de08bba9aa7713441b2b4d7ca8d-arm64
Process init image: zededa/xen:be954dc9ba840dcff92c7edc1823e7e19d12a8ed-arm64
Process init image: linuxkit/init:v0.5
Process init image: linuxkit/runc:v0.5
Process init image: linuxkit/getty:v0.5
Add onboot containers:
  Create OCI config for zededa/mkflash:d4131c74a9e283a1e4ee5f3aa80b47b538378411-arm64
Add files:
  /parts/config.img
  /parts/rootfs.img
time="2018-07-27T08:11:11+02:00" level=fatal msg="failed to add filesystem parts: open rootfs.img: no such file or directory"
xorriso 1.4.6 : RockRidge filesystem manipulator, libburnia project.

Drive current: -outdev 'stdio:linuxkit-efi.iso'
Media current: stdio file, overwriteable
Media status : is blank
Media summary: 0 sessions, 0 data blocks, 0 data,  795g free
Added to ISO image: directory '/'='/tmp/efi'
xorriso : UPDATE : 4596 files added in 1 seconds
xorriso : UPDATE : 4596 files added in 1 seconds
libisofs: NOTE : Cannot arrange content of data files in surely reproducible way
xorriso : UPDATE :  16.14% done
ISO image produced: 99927 sectors
Written to medium : 99927 sectors at LBA 0
Writing to 'stdio:linuxkit-efi.iso' completed successfully.

tar c rootfs_aarch64.img config.img | ./makeflash.sh -C 8192 fallback_aarch64.raw
1+0 records in
1+0 records out
1 byte copied, 0.00871018 s, 0.1 kB/s
+ IMGFILE=/output.img
+ NUMPARTS=9
+ mkdir -p /parts
+ [ -t 0 ]
+ cd /parts
+ bsdtar xzf -
+ ESP_FILE=/tmp/efifs.img
+ cut -f1 -d 
+ echo /parts/rootfs_aarch64.img
+ IMGA_FILE=/parts/rootfs_aarch64.img
+ CONF_FILE=/parts/config.img
+ mount -o loop /parts/rootfs_aarch64.img /mnt
mount: mounting /dev/loop0 on /mnt failed: Invalid argument
Makefile:152: recipe for target 'fallback_aarch64.raw' failed
make: *** [fallback_aarch64.raw] Error 111
make: Entering directory '/home/zededa-ci/src/zenbuild/build-pkgs'
Building and pushing "zededa/zenix:latest"
Sending build context to Docker daemon  517.3MB
Step 1/9 : FROM alpine:edge
 ---> 698b28d4f8d1
Step 2/9 : RUN apk add --no-cache qemu-system-x86_64 qemu-system-aarch64 bash make git
 ---> Using cache
 ---> 5b21459beb8b
Step 3/9 : COPY . /bits/
 ---> Using cache
 ---> c5f345eda82a
Step 4/9 : COPY OVMF.fd /bits/bios/OVMF.fd
 ---> Using cache
 ---> e342e4ec1c5c
Step 5/9 : COPY runme.sh /
 ---> Using cache
 ---> c300c2ff8dc7
Step 6/9 : RUN touch /bits/bios/OVMF.fd
 ---> Using cache
 ---> 85b9a3f966f3
Step 7/9 : WORKDIR /bits
 ---> Using cache
 ---> b59a8adaf13d
Step 8/9 : ENTRYPOINT /runme.sh
 ---> Using cache
 ---> a2c4b6771d85
Step 9/9 : LABEL org.mobyproject.linuxkit.revision 'unknown' org.mobyproject.linuxkit.version 'unknown' org.opencontainers.image.revision '5388aac66a03f908026e0e00dd1493611fc83e28' org.opencontainers.image.source 'https://github.com/linuxkit/linuxkit'
 ---> Running in 3462c91aded3
 ---> 259bc9b55b9f
Removing intermediate container 3462c91aded3
Successfully built 259bc9b55b9f
Successfully tagged zededa/zenix:latest-arm64
Pushing zededa/zenix:latest-arm64
The push refers to a repository [docker.io/zededa/zenix]
96feea203423: Preparing
c96588d795bb: Preparing
5ef670ff3c99: Preparing
841a93c06d96: Preparing
18d6c5bbfc56: Preparing
7f4507898901: Preparing
2a2e682c36db: Preparing
7f4507898901: Waiting
2a2e682c36db: Waiting
5ef670ff3c99: Layer already exists
18d6c5bbfc56: Layer already exists
841a93c06d96: Layer already exists
96feea203423: Layer already exists
c96588d795bb: Layer already exists
7f4507898901: Layer already exists
2a2e682c36db: Layer already exists
latest-arm64: digest: sha256:e5c454196eeb91000f9d56f207607aa6bffd3d388d7dc7920ae433f6ca54d6e1 size: 1787
Pushing zededa/zenix:latest-arm64 to manifest zededa/zenix:latest
time="2018-07-27T08:12:19+02:00" level=warning msg="Couldn't find or access image reference \"zededa/zenix:latest-s390x\". Skipping image."
Digest: sha256:7e1326b9c572cc1260debc48dd42bc21e3c94b452421f49b8e4d10e12f8b1aad 743
Not signing zededa/zenix:latest
Build and push complete, not releasing, all done.
make: Leaving directory '/home/zededa-ci/src/zenbuild/build-pkgs'
FINISHED
