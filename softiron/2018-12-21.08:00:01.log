Already up-to-date.
make -C build-tools all
make[1]: Entering directory '/home/zededa-ci/src/zenbuild/build-tools'
make[1]: Nothing to be done for 'all'.
make[1]: Leaving directory '/home/zededa-ci/src/zenbuild/build-tools'
From github.com:zededa/go-provision
   89911ed0..2091d28e  master          -> origin/master
   77ff051e..4cd9489a  baseos-refactor -> origin/baseos-refactor
   2f6c4e99..dd939331  fixes           -> origin/fixes
   4affe442..87102ed8  pciBack         -> origin/pciBack
   e65636e3..81c784fc  simplify        -> origin/simplify
Updating 89911ed0..2091d28e
Fast-forward
 cmd/domainmgr/domainmgr.go       |  22 ++--
 cmd/downloader/downloader.go     |  12 +-
 cmd/zedagent/handlemetrics.go    |   2 +-
 cmd/zedagent/parseconfig.go      | 111 +++++++++-------
 cmd/zedmanager/updatestatus.go   |  12 +-
 cmd/zedrouter/lisp.go            |  10 +-
 cmd/zedrouter/pbr.go             |   7 +-
 cmd/zedrouter/service.go         |   8 +-
 devicenetwork/devicenetwork.go   |  14 +-
 docs/static-and-proxy-config.txt |   5 +
 pubsub/pubsub.go                 |   5 +-
 types/assignableadapters.go      |   8 +-
 types/zedroutertypes.go          | 273 +++++++++++++++++++++------------------
 zedcloud/send.go                 |  20 +--
 14 files changed, 287 insertions(+), 222 deletions(-)
Already up-to-date.
Building and pushing "zededa/lisp:4bd88ce08634e61060bc7abc8d7b0c1fb25d117d"
4bd88ce08634e61060bc7abc8d7b0c1fb25d117d: Pulling from zededa/lisp
Digest: sha256:1f51ee008e3774ab395f1f2efd81d9c7af43c57134057be840aab5fc9a3cac1f
Status: Image is up to date for zededa/lisp:4bd88ce08634e61060bc7abc8d7b0c1fb25d117d
Building and pushing "zededa/lisp:latest"
Sending build context to Docker daemon  13.18MB
Step 1/20 : FROM golang:1.9.1-alpine AS go-build
 ---> cc52d0ad4cce
Step 2/20 : RUN apk update
 ---> Using cache
 ---> 621195e9370a
Step 3/20 : RUN apk add --no-cache git gcc linux-headers libc-dev libpcap-dev
 ---> Using cache
 ---> 2514c3e08706
Step 4/20 : ADD . /go/src/github.com/zededa/lisp
 ---> 9076ada8b3fa
Step 5/20 : RUN go install github.com/zededa/lisp/cmd/...
 ---> Running in 8aa54327a404
 ---> 71428f965b28
Removing intermediate container 8aa54327a404
Step 6/20 : FROM alpine:3.8
 ---> 637f35dd3ce4
Step 7/20 : RUN apk add --no-cache curl gcc linux-headers libc-dev python python-dev libffi-dev openssl-dev libpcap-dev iproute2 tcpdump ethtool ip6tables
 ---> Using cache
 ---> af473ac2d4f5
Step 8/20 : RUN mkdir /lisp
 ---> Using cache
 ---> 7219a1bdefed
Step 9/20 : ARG LISP_URL=https://www.dropbox.com/s/ogfu5gaw550rlkq/zededa.tgz
 ---> Using cache
 ---> 335818f2a9c5
Step 10/20 : RUN cd /lisp ; curl --insecure -L $LISP_URL | gzip -dc | tar -xf -
 ---> Using cache
 ---> 93e44b0e13f9
Step 11/20 : ADD scripts/sudo /usr/bin/sudo
 ---> Using cache
 ---> 4d1d28f41f38
Step 12/20 : ADD conf scripts/RESTART-LISP scripts/RUN-LISP.rtr1 scripts/RUN-LISP scripts/STOP-LISP scripts/CONFIG-SVC scripts/RL scripts/pslisp scripts/log-packets scripts/ping-mesh.py /lisp/
 ---> Using cache
 ---> 4b096c926b0a
Step 13/20 : RUN python /lisp/get-pip.py
 ---> Using cache
 ---> 4b1dc457daef
Step 14/20 : RUN pip install -r /lisp/pip-requirements.txt
 ---> Using cache
 ---> 446d06f47c30
Step 15/20 : RUN echo 'PS1="`hostname | cut -d . -f 0` > "' >> /root/.profile
 ---> Using cache
 ---> 0c23db95f97e
Step 16/20 : COPY --from=go-build /go/bin/dataplane /lisp/lisp-ztr
 ---> Using cache
 ---> 4cfc1bace463
Step 17/20 : EXPOSE 8080
 ---> Using cache
 ---> 70924a2b5afd
Step 18/20 : WORKDIR /lisp
 ---> Using cache
 ---> 62757a2c135f
Step 19/20 : CMD ./CONFIG-SVC ; ./RL ; sleep 5 ; tail -f ./logs/*
 ---> Using cache
 ---> f846b011bfc3
Step 20/20 : LABEL org.mobyproject.linuxkit.revision 'unknown' org.mobyproject.linuxkit.version 'unknown' org.opencontainers.image.revision 'f8f2cba08166884c5b9341eb605db1d5d84f6550' org.opencontainers.image.source 'https://github.com/linuxkit/linuxkit'
 ---> Using cache
 ---> 04cd2f1dca73
Successfully built 04cd2f1dca73
Successfully tagged zededa/lisp:latest-arm64
Pushing zededa/lisp:latest-arm64
The push refers to a repository [docker.io/zededa/lisp]
60202587de00: Preparing
bec7a4831b69: Preparing
99b7cd413ed3: Preparing
a4a5c52df6b8: Preparing
5a108b9dc054: Preparing
54070777e7cf: Preparing
2a1a2f97e419: Preparing
262fdb2f7191: Preparing
dd58c41d6793: Preparing
42f65d3fc3bb: Preparing
0684225156a7: Preparing
2a1a2f97e419: Waiting
54070777e7cf: Waiting
dd58c41d6793: Waiting
42f65d3fc3bb: Waiting
0684225156a7: Waiting
60202587de00: Layer already exists
99b7cd413ed3: Layer already exists
5a108b9dc054: Layer already exists
a4a5c52df6b8: Layer already exists
bec7a4831b69: Layer already exists
54070777e7cf: Layer already exists
262fdb2f7191: Layer already exists
42f65d3fc3bb: Layer already exists
dd58c41d6793: Layer already exists
2a1a2f97e419: Layer already exists
0684225156a7: Layer already exists
latest-arm64: digest: sha256:932a8a25ef9cf9cfbe993fa4709adb3fd9683bd7097ad5dcf68af7abf9d4425b size: 2621
Pushing zededa/lisp:latest-arm64 to manifest zededa/lisp:latest
time="2018-12-21T08:00:42+01:00" level=warning msg="Couldn't find or access image reference \"zededa/lisp:latest-s390x\". Skipping image."
Digest: sha256:cefe575e283e06ce05e36bbd83cd443ad7106d21b1e623150e764cf24bab1e3a 743
Not signing zededa/lisp:latest
Build and push complete, not releasing, all done.
Building and pushing "zededa/ztools:b1a3a8a30838f1e0a75cdb3eb6f6f4d95ae4b150"
b1a3a8a30838f1e0a75cdb3eb6f6f4d95ae4b150: Pulling from zededa/ztools
no matching manifest for linux/arm64 in the manifest list entries
No image pulled, continuing with build
Sending build context to Docker daemon  46.06MB
Step 1/33 : FROM golang:1.9.1-alpine AS build
 ---> cc52d0ad4cce
Step 2/33 : RUN apk update
 ---> Using cache
 ---> 621195e9370a
Step 3/33 : RUN apk add --no-cache git gcc linux-headers libc-dev util-linux
 ---> Using cache
 ---> 43fab0f90810
Step 4/33 : ADD ./ /go/src/github.com/zededa/go-provision/
 ---> ae7c5d1d5f7b
Step 5/33 : ADD etc /config
 ---> b5351a16011a
Step 6/33 : ADD scripts/device-steps.sh scripts/find-uplink.sh scripts/generate-device.sh scripts/generate-self-signed.sh scripts/handlezedserverconfig.sh /opt/zededa/bin/
 ---> de78fa3bf578
Step 7/33 : ADD examples /opt/zededa/examples
 ---> 5deed470919c
Step 8/33 : ADD AssignableAdapters /var/tmp/zededa/AssignableAdapters
 ---> 9edcd2d470e4
Step 9/33 : ADD DeviceNetworkConfig /var/tmp/zededa/DeviceNetworkConfig
 ---> 14edf01da611
Step 10/33 : ADD lisp.config.base /var/tmp/zededa/lisp.config.base
 ---> e7b20eb3ae4a
Step 11/33 : RUN (cd ./src/github.com/zededa/go-provision/; scripts/getversion.sh >/opt/zededa/bin/versioninfo)
 ---> Running in e177b6aac9cd
 ---> cea5129c0f45
Removing intermediate container e177b6aac9cd
Step 12/33 : RUN cp /opt/zededa/bin/versioninfo /opt/zededa/bin/versioninfo.1
 ---> Running in 7f348ee53ce7
 ---> 07a4ee8fc7d2
Removing intermediate container 7f348ee53ce7
Step 13/33 : RUN echo Building: `cat /opt/zededa/bin/versioninfo`
 ---> Running in 29c1a5188993
Building: 20180314-test-2091d28e-2018-12-21.07.01
 ---> 80fecdc92fa6
Removing intermediate container 29c1a5188993
Step 14/33 : RUN go install github.com/zededa/go-provision/zedbox/...
 ---> Running in 7c4b857f1b49
 ---> a39542a211ca
Removing intermediate container 7c4b857f1b49
Step 15/33 : RUN cd /opt/zededa/bin ; ln -s /go/bin/* .
 ---> Running in 3e8a052c041f
 ---> 38399ef4ef1e
Removing intermediate container 3e8a052c041f
Step 16/33 : RUN cd /opt/zededa/bin ; ln -s zedbox client; ln -s zedbox domainmgr; ln -s zedbox downloader; ln -s zedbox hardwaremodel; ln -s zedbox identitymgr; ln -s zedbox ledmanager; ln -s zedbox logmanager; ln -s zedbox verifier; ln -s zedbox zedagent; ln -s zedbox zedmanager; ln -s zedbox zedrouter; ln -s zedbox ipcmonitor; ln -s zedbox nim; ln -s zedbox waitforaddr
 ---> Running in 124c34fa86be
 ---> 54847b5d16b7
Removing intermediate container 124c34fa86be
Step 17/33 : FROM zededa/lisp:latest AS lisp
 ---> 04cd2f1dca73
Step 18/33 : FROM scratch
 ---> 
Step 19/33 : COPY --from=build /opt/zededa/bin /opt/zededa/bin
 ---> 6f66fca187ed
Step 20/33 : COPY --from=build /opt/zededa/examples /opt/zededa/examples
 ---> afe743135e20
Step 21/33 : COPY --from=build /var/tmp/zededa/AssignableAdapters /var/tmp/zededa/AssignableAdapters
 ---> 04755aeaf184
Step 22/33 : COPY --from=build /var/tmp/zededa/DeviceNetworkConfig /var/tmp/zededa/DeviceNetworkConfig
 ---> 55d4c0a09248
Step 23/33 : COPY --from=build /var/tmp/zededa/lisp.config.base /var/tmp/zededa/lisp.config.base
 ---> 20e056326e5b
Step 24/33 : COPY --from=build /config /opt/zededa/examples/config
 ---> 96f43b36f7d9
Step 25/33 : COPY --from=build /go/bin/* /opt/zededa/bin/
 ---> 1ab38f7b37cc
Step 26/33 : COPY --from=lisp /lisp/lisp-ztr /opt/zededa/bin/
 ---> 3b1ccc65e2ba
Step 27/33 : COPY --from=lisp /lisp /opt/zededa/lisp/
 ---> eed8f0394e77
Step 28/33 : COPY --from=lisp /usr/bin/pydoc /usr/bin/smtpd.py /usr/bin/python* /usr/bin/
 ---> 9e189f08ed1f
Step 29/33 : COPY --from=lisp /usr/lib/libpython* /usr/lib/libffi.so* /usr/lib/
 ---> 06663dab9b7a
Step 30/33 : COPY --from=lisp /usr/lib/python2.7 /usr/lib/python2.7/
 ---> 99f20e30c0e3
Step 31/33 : WORKDIR /opt/zededa/bin
 ---> 8084979588cb
Removing intermediate container 0438a777193e
Step 32/33 : CMD /bin/ash
 ---> Running in 8c9eb5211ea6
 ---> 7c8240d4351c
Removing intermediate container 8c9eb5211ea6
Step 33/33 : LABEL org.mobyproject.linuxkit.revision 'unknown' org.mobyproject.linuxkit.version 'unknown' org.opencontainers.image.revision '2091d28e07781ca723e6ff605f9b1d933fec92f7' org.opencontainers.image.source 'https://github.com/linuxkit/linuxkit'
 ---> Running in f774ea359de3
 ---> c74f7f23ab35
Removing intermediate container f774ea359de3
Successfully built c74f7f23ab35
Successfully tagged zededa/ztools:b1a3a8a30838f1e0a75cdb3eb6f6f4d95ae4b150-arm64
Pushing zededa/ztools:b1a3a8a30838f1e0a75cdb3eb6f6f4d95ae4b150-arm64
The push refers to a repository [docker.io/zededa/ztools]
ee4fe009ca58: Preparing
d243f38445d7: Preparing
4ab5652b520f: Preparing
fdb98f9dffc5: Preparing
f62b72ea318e: Preparing
a20d54266efa: Preparing
042d10b974c3: Preparing
397622a54565: Preparing
560fd1804a3a: Preparing
add774405884: Preparing
4a2f42ba89d9: Preparing
c0f1132bea8e: Preparing
a20d54266efa: Waiting
042d10b974c3: Waiting
397622a54565: Waiting
560fd1804a3a: Waiting
add774405884: Waiting
4a2f42ba89d9: Waiting
c0f1132bea8e: Waiting
4ab5652b520f: Pushed
d243f38445d7: Pushed
f62b72ea318e: Pushed
042d10b974c3: Pushed
397622a54565: Pushed
fdb98f9dffc5: Pushed
a20d54266efa: Pushed
560fd1804a3a: Pushed
add774405884: Pushed
4a2f42ba89d9: Pushed
c0f1132bea8e: Pushed
ee4fe009ca58: Pushed
b1a3a8a30838f1e0a75cdb3eb6f6f4d95ae4b150-arm64: digest: sha256:a7478909cc29222c3c8de7544e738f2d0578443ed92c784c1cc0e6ccafdca339 size: 2828
Pushing zededa/ztools:b1a3a8a30838f1e0a75cdb3eb6f6f4d95ae4b150-arm64 to manifest zededa/ztools:b1a3a8a30838f1e0a75cdb3eb6f6f4d95ae4b150
time="2018-12-21T08:04:01+01:00" level=warning msg="Couldn't find or access image reference \"zededa/ztools:b1a3a8a30838f1e0a75cdb3eb6f6f4d95ae4b150-s390x\". Skipping image."
Digest: sha256:78ba246dc9533a70e9c3e5a2fff58df124a08abcfb3192d2cc0478c52b997f01 743
Not signing zededa/ztools:b1a3a8a30838f1e0a75cdb3eb6f6f4d95ae4b150
Build and push complete, not releasing, all done.
Building and pushing "zededa/ztools:latest"
Sending build context to Docker daemon  46.06MB
Step 1/33 : FROM golang:1.9.1-alpine AS build
 ---> cc52d0ad4cce
Step 2/33 : RUN apk update
 ---> Using cache
 ---> 621195e9370a
Step 3/33 : RUN apk add --no-cache git gcc linux-headers libc-dev util-linux
 ---> Using cache
 ---> 43fab0f90810
Step 4/33 : ADD ./ /go/src/github.com/zededa/go-provision/
 ---> Using cache
 ---> ae7c5d1d5f7b
Step 5/33 : ADD etc /config
 ---> Using cache
 ---> b5351a16011a
Step 6/33 : ADD scripts/device-steps.sh scripts/find-uplink.sh scripts/generate-device.sh scripts/generate-self-signed.sh scripts/handlezedserverconfig.sh /opt/zededa/bin/
 ---> Using cache
 ---> de78fa3bf578
Step 7/33 : ADD examples /opt/zededa/examples
 ---> Using cache
 ---> 5deed470919c
Step 8/33 : ADD AssignableAdapters /var/tmp/zededa/AssignableAdapters
 ---> Using cache
 ---> 9edcd2d470e4
Step 9/33 : ADD DeviceNetworkConfig /var/tmp/zededa/DeviceNetworkConfig
 ---> Using cache
 ---> 14edf01da611
Step 10/33 : ADD lisp.config.base /var/tmp/zededa/lisp.config.base
 ---> Using cache
 ---> e7b20eb3ae4a
Step 11/33 : RUN (cd ./src/github.com/zededa/go-provision/; scripts/getversion.sh >/opt/zededa/bin/versioninfo)
 ---> Using cache
 ---> cea5129c0f45
Step 12/33 : RUN cp /opt/zededa/bin/versioninfo /opt/zededa/bin/versioninfo.1
 ---> Using cache
 ---> 07a4ee8fc7d2
Step 13/33 : RUN echo Building: `cat /opt/zededa/bin/versioninfo`
 ---> Using cache
 ---> 80fecdc92fa6
Step 14/33 : RUN go install github.com/zededa/go-provision/zedbox/...
 ---> Using cache
 ---> a39542a211ca
Step 15/33 : RUN cd /opt/zededa/bin ; ln -s /go/bin/* .
 ---> Using cache
 ---> 38399ef4ef1e
Step 16/33 : RUN cd /opt/zededa/bin ; ln -s zedbox client; ln -s zedbox domainmgr; ln -s zedbox downloader; ln -s zedbox hardwaremodel; ln -s zedbox identitymgr; ln -s zedbox ledmanager; ln -s zedbox logmanager; ln -s zedbox verifier; ln -s zedbox zedagent; ln -s zedbox zedmanager; ln -s zedbox zedrouter; ln -s zedbox ipcmonitor; ln -s zedbox nim; ln -s zedbox waitforaddr
 ---> Using cache
 ---> 54847b5d16b7
Step 17/33 : FROM zededa/lisp:latest AS lisp
 ---> 04cd2f1dca73
Step 18/33 : FROM scratch
 ---> 
Step 19/33 : COPY --from=build /opt/zededa/bin /opt/zededa/bin
 ---> Using cache
 ---> 6f66fca187ed
Step 20/33 : COPY --from=build /opt/zededa/examples /opt/zededa/examples
 ---> Using cache
 ---> afe743135e20
Step 21/33 : COPY --from=build /var/tmp/zededa/AssignableAdapters /var/tmp/zededa/AssignableAdapters
 ---> Using cache
 ---> 04755aeaf184
Step 22/33 : COPY --from=build /var/tmp/zededa/DeviceNetworkConfig /var/tmp/zededa/DeviceNetworkConfig
 ---> Using cache
 ---> 55d4c0a09248
Step 23/33 : COPY --from=build /var/tmp/zededa/lisp.config.base /var/tmp/zededa/lisp.config.base
 ---> Using cache
 ---> 20e056326e5b
Step 24/33 : COPY --from=build /config /opt/zededa/examples/config
 ---> Using cache
 ---> 96f43b36f7d9
Step 25/33 : COPY --from=build /go/bin/* /opt/zededa/bin/
 ---> Using cache
 ---> 1ab38f7b37cc
Step 26/33 : COPY --from=lisp /lisp/lisp-ztr /opt/zededa/bin/
 ---> Using cache
 ---> 3b1ccc65e2ba
Step 27/33 : COPY --from=lisp /lisp /opt/zededa/lisp/
 ---> Using cache
 ---> eed8f0394e77
Step 28/33 : COPY --from=lisp /usr/bin/pydoc /usr/bin/smtpd.py /usr/bin/python* /usr/bin/
 ---> Using cache
 ---> 9e189f08ed1f
Step 29/33 : COPY --from=lisp /usr/lib/libpython* /usr/lib/libffi.so* /usr/lib/
 ---> Using cache
 ---> 06663dab9b7a
Step 30/33 : COPY --from=lisp /usr/lib/python2.7 /usr/lib/python2.7/
 ---> Using cache
 ---> 99f20e30c0e3
Step 31/33 : WORKDIR /opt/zededa/bin
 ---> Using cache
 ---> 8084979588cb
Step 32/33 : CMD /bin/ash
 ---> Using cache
 ---> 7c8240d4351c
Step 33/33 : LABEL org.mobyproject.linuxkit.revision 'unknown' org.mobyproject.linuxkit.version 'unknown' org.opencontainers.image.revision '2091d28e07781ca723e6ff605f9b1d933fec92f7' org.opencontainers.image.source 'https://github.com/linuxkit/linuxkit'
 ---> Using cache
 ---> c74f7f23ab35
Successfully built c74f7f23ab35
Successfully tagged zededa/ztools:latest-arm64
Pushing zededa/ztools:latest-arm64
The push refers to a repository [docker.io/zededa/ztools]
ee4fe009ca58: Preparing
d243f38445d7: Preparing
4ab5652b520f: Preparing
fdb98f9dffc5: Preparing
f62b72ea318e: Preparing
a20d54266efa: Preparing
042d10b974c3: Preparing
397622a54565: Preparing
560fd1804a3a: Preparing
add774405884: Preparing
4a2f42ba89d9: Preparing
c0f1132bea8e: Preparing
a20d54266efa: Waiting
042d10b974c3: Waiting
397622a54565: Waiting
560fd1804a3a: Waiting
add774405884: Waiting
4a2f42ba89d9: Waiting
c0f1132bea8e: Waiting
4ab5652b520f: Layer already exists
fdb98f9dffc5: Layer already exists
d243f38445d7: Layer already exists
f62b72ea318e: Layer already exists
ee4fe009ca58: Layer already exists
a20d54266efa: Layer already exists
042d10b974c3: Layer already exists
add774405884: Layer already exists
560fd1804a3a: Layer already exists
397622a54565: Layer already exists
4a2f42ba89d9: Layer already exists
c0f1132bea8e: Layer already exists
latest-arm64: digest: sha256:a7478909cc29222c3c8de7544e738f2d0578443ed92c784c1cc0e6ccafdca339 size: 2828
Pushing zededa/ztools:latest-arm64 to manifest zededa/ztools:latest
time="2018-12-21T08:04:18+01:00" level=warning msg="Couldn't find or access image reference \"zededa/ztools:latest-s390x\". Skipping image."
Digest: sha256:88570fe273ca2e9fa1cfd502ce7b975d3a1d47a105db7c600fda5c436c03bf48 743
Not signing zededa/ztools:latest
Build and push complete, not releasing, all done.
make: Entering directory '/home/zededa-ci/src/zenbuild/pkg'
(cd ..; ./parse-pkgs.sh pkg/qrexec-lib/Dockerfile.in > pkg/qrexec-lib/Dockerfile)
(cd ..; ./parse-pkgs.sh pkg/qrexec-dom0/Dockerfile.in > pkg/qrexec-dom0/Dockerfile)
(cd ..; ./parse-pkgs.sh pkg/zedctr/Dockerfile.in > pkg/zedctr/Dockerfile)
(cd ..; ./parse-pkgs.sh pkg/mkconf/Dockerfile.in > pkg/mkconf/Dockerfile)
Building and pushing "zededa/grub:10f9c3a840901f1888615c1c1ac5f8ce65e55b7e"
Error response from daemon: manifest for zededa/grub:10f9c3a840901f1888615c1c1ac5f8ce65e55b7e not found
No image pulled, continuing with build
Sending build context to Docker daemon  237.1kB
Step 1/18 : FROM linuxkit/alpine:8b53d842a47fce43464e15f65ee2f68b82542330 AS grub-build
 ---> 3845c352aaeb
Step 2/18 : RUN apk add   automake   make   bison   gettext   flex   gcc   git   libtool   libc-dev   linux-headers   python3   autoconf
 ---> Using cache
 ---> b9ac530207bc
Step 3/18 : RUN ln -s python3 /usr/bin/python
 ---> Using cache
 ---> ce8ef0f2b1c1
Step 4/18 : ENV GRUB_MODULES_PORT "part_gpt fat ext2 iso9660 squash4 gzio linux acpi normal cpio crypto disk boot crc64 gpt search_disk_uuid verify xzio xfs video gfxterm efi_gop gptprio chain probe reboot regexp smbios part_msdos"
 ---> Using cache
 ---> 74cecee9df74
Step 5/18 : ENV GRUB_MODULES_x86_64 "multiboot2 efi_uga"
 ---> Using cache
 ---> 661a0b7b52bd
Step 6/18 : ENV GRUB_MODULES_aarch64 "xen_boot"
 ---> Using cache
 ---> b4cef9aa9b11
Step 7/18 : ENV GRUB_COMMIT 71f9e4ac44142af52c3fc1860436cf9e432bf764
 ---> Using cache
 ---> bb0cc652ba69
Step 8/18 : ENV GRUB_REPO git://git.sv.gnu.org/grub.git
 ---> Using cache
 ---> 37e8f407e4f6
Step 9/18 : COPY patches/* /patches/
 ---> Using cache
 ---> db5da964bced
Step 10/18 : RUN mkdir /grub-lib &&   set -e &&   git clone ${GRUB_REPO} &&   cd grub &&   git checkout -b grub-build ${GRUB_COMMIT} &&   for patch in /patches/*.patch; do     echo "Applying $patch";     patch -p1 < "$patch";   done &&   ./autogen.sh &&   ./configure --libdir=/grub-lib --with-platform=efi CFLAGS="-Os -Wno-unused-value" &&   make -j "$(getconf _NPROCESSORS_ONLN)" &&   make install
 ---> Using cache
 ---> 2ae0f2f45577
Step 11/18 : RUN cd grub ; case $(uname -m) in   x86_64)     ./grub-mkimage -O x86_64-efi -d /grub-lib/grub/x86_64-efi -o /grub-lib/BOOTX64.EFI -p /EFI/BOOT ${GRUB_MODULES_PORT} ${GRUB_MODULES_x86_64} ;    ;;   aarch64)     ./grub-mkimage -O arm64-efi -d /grub-lib/grub/arm64-efi -o /grub-lib/BOOTAA64.EFI -p /EFI/BOOT ${GRUB_MODULES_PORT} ${GRUB_MODULES_aarch64} ;    ln -s BOOTAA64.EFI /grub-lib/BOOTX64.EFI ;    ;;   esac
 ---> Using cache
 ---> 435713e321e5
Step 12/18 : FROM scratch
 ---> 
Step 13/18 : ENTRYPOINT
 ---> Using cache
 ---> 81e09da88379
Step 14/18 : CMD
 ---> Using cache
 ---> 3fee983befa7
Step 15/18 : WORKDIR /EFI/BOOT
 ---> Using cache
 ---> e71983f656a1
Step 16/18 : COPY --from=grub-build /grub-lib/BOOT*.EFI ./
 ---> Using cache
 ---> 0e6f6919c8f7
Step 17/18 : COPY rootfs.cfg grub.cfg
 ---> Using cache
 ---> 4d211a405bbb
Step 18/18 : LABEL org.mobyproject.linuxkit.revision 'unknown' org.mobyproject.linuxkit.version 'unknown' org.opencontainers.image.revision 'fce4804a6328eaa83e576e2764c06aacb8ad5900' org.opencontainers.image.source 'https://github.com/linuxkit/linuxkit'
 ---> Using cache
 ---> 592bfefab8ed
Successfully built 592bfefab8ed
Successfully tagged zededa/grub:10f9c3a840901f1888615c1c1ac5f8ce65e55b7e-arm64
Pushing zededa/grub:10f9c3a840901f1888615c1c1ac5f8ce65e55b7e-arm64
The push refers to a repository [docker.io/zededa/grub]
23df3777852f: Preparing
52244c29b8fe: Preparing
8797535675e6: Preparing
8797535675e6: Layer already exists
23df3777852f: Pushed
52244c29b8fe: Pushed
10f9c3a840901f1888615c1c1ac5f8ce65e55b7e-arm64: digest: sha256:d702d90ee08ed943574e4bb19b64c234ed3a9f9869d5337ebc365eace0498532 size: 942
Pushing zededa/grub:10f9c3a840901f1888615c1c1ac5f8ce65e55b7e-arm64 to manifest zededa/grub:10f9c3a840901f1888615c1c1ac5f8ce65e55b7e
time="2018-12-21T08:04:36+01:00" level=warning msg="Couldn't find or access image reference \"zededa/grub:10f9c3a840901f1888615c1c1ac5f8ce65e55b7e-amd64\". Skipping image."
time="2018-12-21T08:04:39+01:00" level=warning msg="Couldn't find or access image reference \"zededa/grub:10f9c3a840901f1888615c1c1ac5f8ce65e55b7e-s390x\". Skipping image."
Digest: sha256:4b10f767b49a7fbff6facdd3e47506d2468d105c1afdf5b9131df0cdc97e635a 433
Not signing zededa/grub:10f9c3a840901f1888615c1c1ac5f8ce65e55b7e
Build and push complete, not releasing, all done.
Building and pushing "zededa/xen:f51bf3d17fad15b71242befbddec96e177132a99"
f51bf3d17fad15b71242befbddec96e177132a99: Pulling from zededa/xen
no matching manifest for linux/arm64 in the manifest list entries
No image pulled, continuing with build
Sending build context to Docker daemon  5.632kB
Step 1/17 : FROM alpine:3.7 as kernel-build
 ---> fcf8ab16e420
Step 2/17 : RUN apk update
 ---> Using cache
 ---> 8951baa8bd09
Step 3/17 : RUN apk add     argp-standalone     automake     bash     bc     binutils-dev     bison     build-base     curl     diffutils     flex     git     gmp-dev     gnupg     installkernel     kmod     libelf-dev     libressl-dev     linux-headers     ncurses-dev     python2     sed     squashfs-tools     tar     xz     xz-dev     zlib-dev     libunwind-dev
 ---> Using cache
 ---> 6d625a163e49
Step 4/17 : ENV XEN_UBOOT_ADDR 0x81000000
 ---> Using cache
 ---> 84cc93da4ff8
Step 5/17 : ENV XEN_VERSION 4.11.0
 ---> Using cache
 ---> 049d1933ca7f
Step 6/17 : ENV XEN_SOURCE https://downloads.xenproject.org/release/xen/${XEN_VERSION}/xen-${XEN_VERSION}.tar.gz
 ---> Using cache
 ---> dc812a5b93b0
Step 7/17 : RUN [ -f xen-${XEN_VERSION}.tar.gz ] || curl -fsSLO ${XEN_SOURCE} &&     gzip -d xen-${XEN_VERSION}.tar.gz &&     cat xen-${XEN_VERSION}.tar | tar --absolute-names -x && mv /xen-${XEN_VERSION} /xen
 ---> Using cache
 ---> 997b22a23139
Step 8/17 : COPY xen_config* /xen/
 ---> Using cache
 ---> 119aa6869d6b
Step 9/17 : WORKDIR /xen/xen
 ---> Using cache
 ---> 6b6bb5cbf0aa
Step 10/17 : RUN case $(uname -m) in     x86_64)         XEN_DEF_CONF=/xen/xen/arch/x86/configs/x86_64_defconfig; 	;;     esac ;    cp /xen/xen_config-${XEN_VERSION}-$(uname -m) ${XEN_DEF_CONF};     rm /xen/xen_config* &&     make defconfig &&     make oldconfig &&     mkdir -p /out/boot
 ---> Using cache
 ---> 7943e79b40ea
Step 11/17 : RUN make &&     case $(uname -m) in     x86_64)         cp xen.gz /out/boot/xen.gz 	;;     aarch64)         (cd /tmp ; wget -O - ftp://ftp.denx.de/pub/u-boot/u-boot-2018.09.tar.bz2 | tar xjf - ; cd u-boot-* ; make defconfig ; make tools-all) ;        /tmp/u-boot-*/tools/mkimage -A arm64 -T kernel -a $XEN_UBOOT_ADDR -e $XEN_UBOOT_ADDR -C none -d xen /out/boot/xen.uboot ;        cp xen.efi /out/boot/         ;;     esac
 ---> Using cache
 ---> c37926d94a27
Step 12/17 : FROM scratch
 ---> 
Step 13/17 : ENTRYPOINT
 ---> Using cache
 ---> 81e09da88379
Step 14/17 : CMD
 ---> Using cache
 ---> 3fee983befa7
Step 15/17 : WORKDIR /boot
 ---> Using cache
 ---> 2b566e7ed758
Step 16/17 : COPY --from=kernel-build /out/* .
 ---> Using cache
 ---> 35d5daa5ce94
Step 17/17 : LABEL org.mobyproject.linuxkit.revision 'unknown' org.mobyproject.linuxkit.version 'unknown' org.opencontainers.image.revision 'fce4804a6328eaa83e576e2764c06aacb8ad5900' org.opencontainers.image.source 'https://github.com/linuxkit/linuxkit'
 ---> Using cache
 ---> faa011f9e04f
Successfully built faa011f9e04f
Successfully tagged zededa/xen:f51bf3d17fad15b71242befbddec96e177132a99-arm64
Pushing zededa/xen:f51bf3d17fad15b71242befbddec96e177132a99-arm64
The push refers to a repository [docker.io/zededa/xen]
c722a099692e: Preparing
057e21bde9d1: Preparing
057e21bde9d1: Pushed
c722a099692e: Pushed
f51bf3d17fad15b71242befbddec96e177132a99-arm64: digest: sha256:7ee05a6cbe2026319a1ec00b3e6143bb9ad22efa49bd42ddca209c5b4ba5c706 size: 733
Pushing zededa/xen:f51bf3d17fad15b71242befbddec96e177132a99-arm64 to manifest zededa/xen:f51bf3d17fad15b71242befbddec96e177132a99
time="2018-12-21T08:04:58+01:00" level=warning msg="Couldn't find or access image reference \"zededa/xen:f51bf3d17fad15b71242befbddec96e177132a99-s390x\". Skipping image."
Digest: sha256:6f8b12b6f065654018994e94a902fc9cacc79ee89f9f08e7187983c2f4d28095 741
Not signing zededa/xen:f51bf3d17fad15b71242befbddec96e177132a99
Build and push complete, not releasing, all done.
Building and pushing "zededa/kernel:7b989ae20b664c80e4f7c52a6aa7c8228f3609aa"
7b989ae20b664c80e4f7c52a6aa7c8228f3609aa: Pulling from zededa/kernel
no matching manifest for linux/arm64 in the manifest list entries
No image pulled, continuing with build
Sending build context to Docker daemon  13.74MB
Step 1/35 : FROM alpine:3.6 as kernel-build
 ---> ba29a7041202
Step 2/35 : COPY kernel.hikey /kernel.hikey
 ---> Using cache
 ---> cd2b5d82f48b
Step 3/35 : RUN apk update
 ---> Using cache
 ---> da86580b22bd
Step 4/35 : RUN apk add     argp-standalone     automake     bash     bc     binutils-dev     bison     build-base     curl     diffutils     flex     git     gmp-dev     gnupg     installkernel     kmod     libelf-dev     libressl-dev     linux-headers     ncurses-dev     python2     sed     squashfs-tools     tar     xz     xz-dev     zlib-dev
 ---> Using cache
 ---> 045523ff4bba
Step 5/35 : RUN [ $(uname -m) == x86_64 ] && apk add libunwind-dev || true
 ---> Using cache
 ---> 9713829a4a02
Step 6/35 : ENV KERNEL_VERSION 4.9.51
 ---> Using cache
 ---> 35bca15d85d0
Step 7/35 : ENV KERNEL_SERIES 4.9.x
 ---> Using cache
 ---> 53a09a9c3b78
Step 8/35 : ENV KERNEL_SOURCE https://www.kernel.org/pub/linux/kernel/v4.x/linux-${KERNEL_VERSION}.tar.xz
 ---> Using cache
 ---> 9d9ad15f8d9b
Step 9/35 : ENV KERNEL_SHA256_SUMS https://www.kernel.org/pub/linux/kernel/v4.x/sha256sums.asc
 ---> Using cache
 ---> f67bc5233421
Step 10/35 : ENV KERNEL_PGP2_SIGN https://www.kernel.org/pub/linux/kernel/v4.x/linux-${KERNEL_VERSION}.tar.sign
 ---> Using cache
 ---> 7c69a13b8e46
Step 11/35 : ENV IXGBE_URL https://sourceforge.net/projects/e1000/files/ixgbe%20stable/
 ---> Using cache
 ---> 5dfd621d2b40
Step 12/35 : ENV IXGBE_VERSION 5.3.7
 ---> Using cache
 ---> 8f897e673789
Step 13/35 : COPY keys.asc keys.asc
 ---> Using cache
 ---> 2d96057393b6
Step 14/35 : RUN curl -fsSLo linux-${KERNEL_VERSION}.tar.xz ${KERNEL_SOURCE}
 ---> Using cache
 ---> 049289fb6f75
Step 15/35 : RUN curl -fsSLO ${KERNEL_SHA256_SUMS} &&     gpg2 -q --import keys.asc &&     gpg2 --verify sha256sums.asc &&     KERNEL_SHA256=$(grep linux-${KERNEL_VERSION}.tar.xz sha256sums.asc | cut -d ' ' -f 1) &&     [ -f linux-${KERNEL_VERSION}.tar.xz ] || curl -fsSLO ${KERNEL_SOURCE} &&     echo "${KERNEL_SHA256}  linux-${KERNEL_VERSION}.tar.xz" | sha256sum -c - &&     xz -d linux-${KERNEL_VERSION}.tar.xz &&     curl -fsSLO ${KERNEL_PGP2_SIGN} &&     gpg2 --verify linux-${KERNEL_VERSION}.tar.sign linux-${KERNEL_VERSION}.tar &&     cat linux-${KERNEL_VERSION}.tar | tar --absolute-names -x && mv /linux-${KERNEL_VERSION} /linux
 ---> Using cache
 ---> 6c66f4f2e02f
Step 16/35 : COPY patches-${KERNEL_SERIES} /patches
 ---> Using cache
 ---> 8f293c4ff46c
Step 17/35 : WORKDIR /linux
 ---> Using cache
 ---> ac671fa6082b
Step 18/35 : RUN set -e && for patch in /patches/*.patch; do         echo "Applying $patch";         patch -p1 < "$patch";     done
 ---> Using cache
 ---> cfa88589c566
Step 19/35 : COPY ixgbe-${IXGBE_VERSION}.tgz /tmp/ixgbe.tgz
 ---> Using cache
 ---> 3ffe34710bdb
Step 20/35 : RUN tar -C /tmp -xzvf /tmp/ixgbe.tgz &&     rm -rf /linux/drivers/net/ethernet/intel/ixgbe &&     cp -r /tmp/ixgbe-${IXGBE_VERSION}/src /linux/drivers/net/ethernet/intel/ixgbe
 ---> Using cache
 ---> 3e99d467a9b2
Step 21/35 : COPY kernel_config* /linux/
 ---> Using cache
 ---> ce00d03dcfd0
Step 22/35 : RUN mkdir /out
 ---> Using cache
 ---> f433673898b9
Step 23/35 : RUN case $(uname -m) in     x86_64)         KERNEL_DEF_CONF=/linux/arch/x86/configs/x86_64_defconfig;         ;;     aarch64)         KERNEL_DEF_CONF=/linux/arch/arm64/configs/defconfig;         ;;     esac  &&     cp /linux/kernel_config-${KERNEL_SERIES}-$(uname -m) ${KERNEL_DEF_CONF};     if [ -n "${EXTRA}" ]; then         sed -i "s/CONFIG_LOCALVERSION=\"-linuxkit\"/CONFIG_LOCALVERSION=\"-linuxkit${EXTRA}\"/" ${KERNEL_DEF_CONF};         if [ "${EXTRA}" = "-dbg" ]; then             sed -i 's/CONFIG_PANIC_ON_OOPS=y/# CONFIG_PANIC_ON_OOPS is not set/' ${KERNEL_DEF_CONF};         fi &&         cat /linux/kernel_config${EXTRA} >> ${KERNEL_DEF_CONF};     fi &&     rm /linux/kernel_config* &&     make defconfig &&     make oldconfig &&     if [ -z "${EXTRA}" ]; then diff .config ${KERNEL_DEF_CONF}; fi
 ---> Using cache
 ---> 39c677ffb22a
Step 24/35 : RUN make -j "$(getconf _NPROCESSORS_ONLN)" KCFLAGS="-fno-pie" &&     case $(uname -m) in     x86_64)         cp arch/x86_64/boot/bzImage /out/kernel;         ;;     aarch64)         mkdir -p /tmp/kernel-modules/lib ; cp arch/arm64/boot/Image.gz /tmp/kernel-modules/lib/kernel ;         cp /kernel.hikey /out/kernel;         ;;     esac &&     cp System.map /out &&     ([ "${EXTRA}" = "-dbg" ] && cp vmlinux /out || true)
 ---> Using cache
 ---> 3e3e5d5e0e7f
Step 25/35 : RUN make INSTALL_MOD_PATH=/tmp/kernel-modules modules_install &&     ( DVER=$(basename $(find /tmp/kernel-modules/lib/modules/ -mindepth 1 -maxdepth 1)) &&       cd /tmp/kernel-modules/lib/modules/$DVER &&       rm build source &&       ln -s /usr/src/linux-headers-$DVER build ) &&     ( cd /tmp/kernel-modules && tar cf /out/kernel.tar lib )
 ---> Using cache
 ---> a17de3225517
Step 26/35 : RUN mkdir -p /tmp/kernel-headers/usr &&     make INSTALL_HDR_PATH=/tmp/kernel-headers/usr headers_install &&     ( cd /tmp/kernel-headers && tar cf /out/kernel-headers.tar usr )
 ---> Using cache
 ---> b740e6f36203
Step 27/35 : RUN DVER=$(basename $(find /tmp/kernel-modules/lib/modules/ -mindepth 1 -maxdepth 1)) &&     dir=/tmp/usr/src/linux-headers-$DVER &&     mkdir -p $dir &&     cp /linux/.config $dir &&     cp /linux/Module.symvers $dir &&     find . -path './include/*' -prune -o            -path './arch/*/include' -prune -o            -path './scripts/*' -prune -o            -type f \( -name 'Makefile*' -o -name 'Kconfig*' -o -name 'Kbuild*' -o                       -name '*.lds' -o -name '*.pl' -o -name '*.sh' \) |          tar cf - -T - | (cd $dir; tar xf -) &&     ( cd /tmp && tar cf /out/kernel-dev.tar usr/src )
 ---> Using cache
 ---> 2256358e15e9
Step 28/35 : RUN printf "KERNEL_SOURCE=${KERNEL_SOURCE}\n" > /out/kernel-source-info
 ---> Using cache
 ---> c941fd48ff4b
Step 29/35 : RUN if [ "${KERNEL_SERIES}" != "4.4.x" ]; then        mkdir -p /build/perf &&        make -C tools/perf LDFLAGS=-static O=/build/perf &&        strip /build/perf/perf &&        cp /build/perf/perf /out;      fi
 ---> Using cache
 ---> 6746d1a16880
Step 30/35 : FROM scratch
 ---> 
Step 31/35 : ENTRYPOINT
 ---> Using cache
 ---> 81e09da88379
Step 32/35 : CMD
 ---> Using cache
 ---> 3fee983befa7
Step 33/35 : WORKDIR /
 ---> Using cache
 ---> f9e18cb7e41a
Step 34/35 : COPY --from=kernel-build /out/* /
 ---> Using cache
 ---> 1dd2e75a8a9b
Step 35/35 : LABEL org.mobyproject.linuxkit.revision 'unknown' org.mobyproject.linuxkit.version 'unknown' org.opencontainers.image.revision 'fce4804a6328eaa83e576e2764c06aacb8ad5900' org.opencontainers.image.source 'https://github.com/linuxkit/linuxkit'
 ---> Using cache
 ---> af82316efda7
Successfully built af82316efda7
Successfully tagged zededa/kernel:7b989ae20b664c80e4f7c52a6aa7c8228f3609aa-arm64
Pushing zededa/kernel:7b989ae20b664c80e4f7c52a6aa7c8228f3609aa-arm64
The push refers to a repository [docker.io/zededa/kernel]
df4cb543fd7d: Preparing
df4cb543fd7d: Pushed
7b989ae20b664c80e4f7c52a6aa7c8228f3609aa-arm64: digest: sha256:d2e6ab6f1808b372746a9d543ff73ea1db32e39c920267d95ca882fc93ab6e2a size: 529
Pushing zededa/kernel:7b989ae20b664c80e4f7c52a6aa7c8228f3609aa-arm64 to manifest zededa/kernel:7b989ae20b664c80e4f7c52a6aa7c8228f3609aa
time="2018-12-21T08:05:56+01:00" level=warning msg="Couldn't find or access image reference \"zededa/kernel:7b989ae20b664c80e4f7c52a6aa7c8228f3609aa-s390x\". Skipping image."
Digest: sha256:9ec5a052f0d4e2c87ace104281436cf6efdd56d42eb3650e3c67df69e23b154b 741
Not signing zededa/kernel:7b989ae20b664c80e4f7c52a6aa7c8228f3609aa
Build and push complete, not releasing, all done.
Building and pushing "zededa/fw:298163b691690b23d5db7c11e0cd69f6f1de57c7"
298163b691690b23d5db7c11e0cd69f6f1de57c7: Pulling from zededa/fw
Digest: sha256:3a83576b1ce62cce1b5040a537067d25917fedaf4baa0d7f94c4d7052abccb2f
Status: Image is up to date for zededa/fw:298163b691690b23d5db7c11e0cd69f6f1de57c7
Building and pushing "zededa/xen-tools:9c96b441d083d7ef7bcb602bf009fa91bd7ebbf2"
9c96b441d083d7ef7bcb602bf009fa91bd7ebbf2: Pulling from zededa/xen-tools
Digest: sha256:11e8ca7fb023acb3823fee4631667bfb65612d40778b1d55d0323dd3fb9ffeff
Status: Image is up to date for zededa/xen-tools:9c96b441d083d7ef7bcb602bf009fa91bd7ebbf2
Building and pushing "zededa/dnsmasq:c5985cdd83998d06255fe115d230a280c6928f1b"
c5985cdd83998d06255fe115d230a280c6928f1b: Pulling from zededa/dnsmasq
Digest: sha256:5538226a34dced0db54c64a1de4d6d3a4a0f2c515105facf5b20e4a97abe78b2
Status: Image is up to date for zededa/dnsmasq:c5985cdd83998d06255fe115d230a280c6928f1b
Building and pushing "zededa/strongswan:8f5ee3b98aa3ea49a9a4231baac9be933d6155ec"
8f5ee3b98aa3ea49a9a4231baac9be933d6155ec: Pulling from zededa/strongswan
Digest: sha256:b183b09d233b6455bd307b588e1daf800de4ed1e69eebe6bfafc5ece8291787d
Status: Image is up to date for zededa/strongswan:8f5ee3b98aa3ea49a9a4231baac9be933d6155ec
Building and pushing "zededa/gpt-tools:fe878611e4e032ea10946cbc9a1c3d5b22349dc4"
fe878611e4e032ea10946cbc9a1c3d5b22349dc4: Pulling from zededa/gpt-tools
Digest: sha256:2778c0f1eefac80bbf63b72721820ff95db243638024ea7447634013969b7ce1
Status: Image is up to date for zededa/gpt-tools:fe878611e4e032ea10946cbc9a1c3d5b22349dc4
Building and pushing "zededa/dom0-ztools:c6d8f2123c748379add5d3dbbac23e3630131760"
c6d8f2123c748379add5d3dbbac23e3630131760: Pulling from zededa/dom0-ztools
Digest: sha256:c177a05c06b83e6438a3aee39ba3fcdfca821d2276c6e25e0ab6697184471710
Status: Image is up to date for zededa/dom0-ztools:c6d8f2123c748379add5d3dbbac23e3630131760
Building and pushing "zededa/qrexec-lib:2e0df0df95f86df6953d7d2e7729213b77fd7206"
2e0df0df95f86df6953d7d2e7729213b77fd7206: Pulling from zededa/qrexec-lib
Digest: sha256:9ed46f2a158c6f900f41ebfeb107c71657737a01964e859e5b8019826a311a8f
Status: Image is up to date for zededa/qrexec-lib:2e0df0df95f86df6953d7d2e7729213b77fd7206
Building and pushing "zededa/qrexec-dom0:2c3cf9b135409690eaa86092c41f7c800d398468"
2c3cf9b135409690eaa86092c41f7c800d398468: Pulling from zededa/qrexec-dom0
Digest: sha256:7a6a1a64f2254649c38ca1ff24ecdacc6c62cafaf322eeee9cc41ba47181fe5b
Status: Image is up to date for zededa/qrexec-dom0:2c3cf9b135409690eaa86092c41f7c800d398468
Building and pushing "zededa/wwan:5f68442251df0f2625fde14e947f11de2374b72d"
5f68442251df0f2625fde14e947f11de2374b72d: Pulling from zededa/wwan
Digest: sha256:5127447e62d55c8047c02cf82714b52168c2ebd35941c67a40ce1d55d555d85d
Status: Image is up to date for zededa/wwan:5f68442251df0f2625fde14e947f11de2374b72d
Building and pushing "zededa/wlan:8aa66e76c276b97d1141801d3f461e2b3f8f8f97"
8aa66e76c276b97d1141801d3f461e2b3f8f8f97: Pulling from zededa/wlan
Digest: sha256:4c77458c273c81d5694d5b4e21a9a203f1dba6296d670e1f6cdd5ada7f9235e6
Status: Image is up to date for zededa/wlan:8aa66e76c276b97d1141801d3f461e2b3f8f8f97
Building and pushing "zededa/watchdog:2aea3af274e4928d2eab2b738d0e100ee5362173"
2aea3af274e4928d2eab2b738d0e100ee5362173: Pulling from zededa/watchdog
Digest: sha256:1b797e00f5eab9f84d53e521bfa95f24a175674b071a25fdfce2e59dde75f805
Status: Image is up to date for zededa/watchdog:2aea3af274e4928d2eab2b738d0e100ee5362173
Building and pushing "zededa/guacd:1bdc3c8ca55db141372b1a12daf7d12c04866eed"
1bdc3c8ca55db141372b1a12daf7d12c04866eed: Pulling from zededa/guacd
Digest: sha256:52b491eb676737c52c4dfc4fd6ff1b36d564ecd9278080b17fab005d875560cf
Status: Image is up to date for zededa/guacd:1bdc3c8ca55db141372b1a12daf7d12c04866eed
Building and pushing "zededa/device-trees:1bca882c64827de08bba9aa7713441b2b4d7ca8d"
1bca882c64827de08bba9aa7713441b2b4d7ca8d: Pulling from zededa/device-trees
Digest: sha256:cbed1a5fce79eea8f55ce4e275960b1f6e0ebd6ac9d087b464e0691127dd4c20
Status: Image is up to date for zededa/device-trees:1bca882c64827de08bba9aa7713441b2b4d7ca8d
Building and pushing "zededa/debug:3aeeaf4e04f450283d49220eb7e82262b4531687"
3aeeaf4e04f450283d49220eb7e82262b4531687: Pulling from zededa/debug
Digest: sha256:acf47fcb3817dcd101001cefa6429880fa8c73f3dda208fdfdb01b7f72934591
Status: Image is up to date for zededa/debug:3aeeaf4e04f450283d49220eb7e82262b4531687
Building and pushing "zededa/zedctr:0f38bbbff95eae348a92e87e837455ad8b4cee6d"
0f38bbbff95eae348a92e87e837455ad8b4cee6d: Pulling from zededa/zedctr
Digest: sha256:9cf70db70cc3fcd9318ed02688f05fc784ab8f2b7a55b1716758c004330bba1d
Status: Image is up to date for zededa/zedctr:0f38bbbff95eae348a92e87e837455ad8b4cee6d
Building and pushing "zededa/conf:5905e588128d59fe44d6c37768b101def09e73d6"
5905e588128d59fe44d6c37768b101def09e73d6: Pulling from zededa/conf
Digest: sha256:cf1f9ee6faa3591eec8b6ad242995379f0e4724a1552f78c530935f640a552d1
Status: Image is up to date for zededa/conf:5905e588128d59fe44d6c37768b101def09e73d6
Building and pushing "zededa/mkrootfs-ext4:5f77cd6a2b87a3a9927593763da1941dbed1ce80"
5f77cd6a2b87a3a9927593763da1941dbed1ce80: Pulling from zededa/mkrootfs-ext4
Digest: sha256:0883dbb96270dd622fec7433c2c8662c573955bf8c07c0c7f4a1e3ce6d73b5ba
Status: Image is up to date for zededa/mkrootfs-ext4:5f77cd6a2b87a3a9927593763da1941dbed1ce80
Building and pushing "zededa/mkrootfs-squash:b47d705603f5f0d3765b03cf583e1a7fd287f212"
b47d705603f5f0d3765b03cf583e1a7fd287f212: Pulling from zededa/mkrootfs-squash
Digest: sha256:7f807f091c04558888bd6e64767abd19597c33c1f90b4eb98e6370fc6d760660
Status: Image is up to date for zededa/mkrootfs-squash:b47d705603f5f0d3765b03cf583e1a7fd287f212
Building and pushing "zededa/mkimage-raw-efi:932773aae8f4bb3de7651b9a8a60d9cf3104fce5"
932773aae8f4bb3de7651b9a8a60d9cf3104fce5: Pulling from zededa/mkimage-raw-efi
Digest: sha256:15bcab8309c0fc9096d0962dba2645462526d06ed086a470ba8837179edd6b29
Status: Image is up to date for zededa/mkimage-raw-efi:932773aae8f4bb3de7651b9a8a60d9cf3104fce5
Building and pushing "zededa/mkimage-iso-efi:49a6ff8320ce088460c8acb6f36bc15b15d800e9"
49a6ff8320ce088460c8acb6f36bc15b15d800e9: Pulling from zededa/mkimage-iso-efi
Digest: sha256:b56338e3f6e0558461357eb72f411e2d3618fc269fc58612febd21b6d873a17e
Status: Image is up to date for zededa/mkimage-iso-efi:49a6ff8320ce088460c8acb6f36bc15b15d800e9
make: Leaving directory '/home/zededa-ci/src/zenbuild/pkg'
make: Entering directory '/home/zededa-ci/src/zenbuild/pkg'
(cd ..; ./parse-pkgs.sh pkg/zedctr//Dockerfile.in > pkg/zedctr//Dockerfile)
Building and pushing "zededa/zedctr:0f38bbbff95eae348a92e87e837455ad8b4cee6d"
Sending build context to Docker daemon  20.48kB
Step 1/21 : FROM zededa/ztools:latest as ztools
 ---> 328da18d8fb6
Step 2/21 : FROM zededa/xen-tools:9c96b441d083d7ef7bcb602bf009fa91bd7ebbf2-arm64 as xen-tools
 ---> 194a0d29c96f
Step 3/21 : FROM zededa/dnsmasq:c5985cdd83998d06255fe115d230a280c6928f1b-arm64 as dnsmasq
 ---> 85ce87902c8e
Step 4/21 : FROM zededa/strongswan:8f5ee3b98aa3ea49a9a4231baac9be933d6155ec-arm64 as strongswan
 ---> 2e11606a1b07
Step 5/21 : FROM zededa/gpt-tools:fe878611e4e032ea10946cbc9a1c3d5b22349dc4-arm64 as gpttools
 ---> 245b06fc67fd
Step 6/21 : FROM zededa/watchdog:2aea3af274e4928d2eab2b738d0e100ee5362173-arm64 as watchdog
 ---> 2682e16114b6
Step 7/21 : FROM alpine:3.8
 ---> 637f35dd3ce4
Step 8/21 : RUN apk add --no-cache     yajl xz bash openssl iptables ip6tables iproute2 dhcpcd     apk-cron coreutils dmidecode sudo libbz2 libuuid ipset     libpcap libaio logrotate pixman glib curl radvd perl ethtool     openssh-server util-linux e2fsprogs libcrypto1.0 xorriso
 ---> Running in b14b4e27c543
fetch http://dl-cdn.alpinelinux.org/alpine/v3.8/main/aarch64/APKINDEX.tar.gz
fetch http://dl-cdn.alpinelinux.org/alpine/v3.8/community/aarch64/APKINDEX.tar.gz
(1/62) Installing apk-cron (1.0-r1)
(2/62) Installing ncurses-terminfo-base (6.1_p20180818-r1)
(3/62) Installing ncurses-terminfo (6.1_p20180818-r1)
(4/62) Installing ncurses-libs (6.1_p20180818-r1)
(5/62) Installing readline (7.0.003-r0)
(6/62) Installing bash (4.4.19-r1)
Executing bash-4.4.19-r1.post-install
(7/62) Installing libattr (2.4.47-r7)
(8/62) Installing libacl (2.2.52-r5)
(9/62) Installing coreutils (8.29-r2)
(10/62) Installing ca-certificates (20171114-r3)
(11/62) Installing nghttp2-libs (1.32.0-r0)
(12/62) Installing libssh2 (1.8.0-r3)
(13/62) Installing libcurl (7.61.1-r1)
(14/62) Installing curl (7.61.1-r1)
(15/62) Installing dhcpcd (7.0.7-r0)
(16/62) Installing dmidecode (3.1-r0)
(17/62) Installing libuuid (2.32-r0)
(18/62) Installing libblkid (2.32-r0)
(19/62) Installing libcom_err (1.44.2-r0)
(20/62) Installing e2fsprogs-libs (1.44.2-r0)
(21/62) Installing e2fsprogs (1.44.2-r0)
(22/62) Installing ethtool (4.16-r0)
(23/62) Installing libffi (3.2.1-r4)
(24/62) Installing libintl (0.19.8.1-r2)
(25/62) Installing libmount (2.32-r0)
(26/62) Installing pcre (8.42-r0)
(27/62) Installing glib (2.56.1-r0)
(28/62) Installing libmnl (1.0.4-r0)
(29/62) Installing jansson (2.11-r0)
(30/62) Installing libnftnl-libs (1.1.1-r0)
(31/62) Installing iptables (1.6.2-r0)
(32/62) Installing ip6tables (1.6.2-r0)
(33/62) Installing libelf (0.8.13-r3)
(34/62) Installing iproute2 (4.13.0-r0)
Executing iproute2-4.13.0-r0.post-install
(35/62) Installing ipset (6.38-r1)
(36/62) Installing libaio (0.3.111-r0)
(37/62) Installing libbz2 (1.0.6-r6)
(38/62) Installing libcrypto1.0 (1.0.2q-r0)
(39/62) Installing libpcap (1.8.1-r1)
(40/62) Installing popt (1.16-r7)
(41/62) Installing logrotate (3.14.0-r0)
(42/62) Installing openssh-keygen (7.7_p1-r3)
(43/62) Installing openssh-server-common (7.7_p1-r3)
(44/62) Installing openssh-server (7.7_p1-r3)
(45/62) Installing libssl1.0 (1.0.2q-r0)
(46/62) Installing openssl (1.0.2q-r0)
(47/62) Installing perl (5.26.3-r0)
(48/62) Installing pixman (0.34.0-r5)
(49/62) Installing radvd (2.17-r2)
Executing radvd-2.17-r2.pre-install
(50/62) Installing sudo (1.8.23-r2)
(51/62) Installing libsmartcols (2.32-r0)
(52/62) Installing findmnt (2.32-r0)
(53/62) Installing libfdisk (2.32-r0)
(54/62) Installing util-linux (2.32-r0)
(55/62) Installing libburn (1.4.8-r0)
(56/62) Installing libedit (20170329.3.1-r3)
(57/62) Installing libisofs (1.4.8-r0)
(58/62) Installing libisoburn (1.4.8-r0)
(59/62) Installing xorriso (1.4.8-r0)
(60/62) Installing xz-libs (5.2.4-r0)
(61/62) Installing xz (5.2.4-r0)
(62/62) Installing yajl (2.1.0-r0)
Executing busybox-1.28.4-r1.trigger
Executing ca-certificates-20171114-r3.trigger
Executing glib-2.56.1-r0.trigger
OK: 72 MiB in 75 packages
 ---> d7c8f52aa519
Removing intermediate container b14b4e27c543
Step 9/21 : RUN [ `uname -m` = "aarch64" ] && apk add --no-cache libfdt || :
 ---> Running in fd75ee88c970
fetch http://dl-cdn.alpinelinux.org/alpine/v3.8/main/aarch64/APKINDEX.tar.gz
fetch http://dl-cdn.alpinelinux.org/alpine/v3.8/community/aarch64/APKINDEX.tar.gz
(1/1) Installing libfdt (1.4.4-r0)
OK: 72 MiB in 76 packages
 ---> 327a16264e50
Removing intermediate container fd75ee88c970
Step 10/21 : RUN ln -s libpcap.so.1 /usr/lib/libpcap.so
 ---> Running in 0e9dcc95c185
 ---> d91c89202be8
Removing intermediate container 0e9dcc95c185
Step 11/21 : RUN ssh-keygen -A ; echo PermitRootLogin yes >> /etc/ssh/sshd_config ; sed -ie '/^root/s#^.*$#root:$6$Ndt1G5AYZFQ8rz7m$7vGZMKKotSYxwxk/.jMfuOCzxw0I3DNedygaQaLF7kYSYsLqiBHhmc8RJSXp8/VxSYPpgYSz/8fkv0hO6I4js.:17477:0:::::#' /etc/shadow
 ---> Running in 9fba114fcde1
ssh-keygen: generating new host keys: RSA DSA ECDSA ED25519 
 ---> 8b68045c17f4
Removing intermediate container 9fba114fcde1
Step 12/21 : COPY --from=xen-tools / /
 ---> 91a74692b317
Step 13/21 : COPY --from=ztools / /
 ---> 7ca096878165
Step 14/21 : COPY --from=gpttools / /
 ---> 0e83e1706d54
Step 15/21 : COPY --from=dnsmasq /usr/sbin/dnsmasq /opt/zededa/bin/dnsmasq
 ---> 12fb1942398a
Step 16/21 : COPY --from=strongswan / /
 ---> 212afc14fe77
Step 17/21 : COPY --from=watchdog /usr/sbin /usr/sbin
 ---> 0532c94a5074
Step 18/21 : COPY rootfs/ /
 ---> 456b42b80f85
Step 19/21 : RUN chmod 644 /etc/logrotate.d/zededa
 ---> Running in 3e242ddaea92
 ---> 7986cfd472e9
Removing intermediate container 3e242ddaea92
Step 20/21 : CMD /init.sh
 ---> Running in b9ea42dd6f59
 ---> 057d52a283b0
Removing intermediate container b9ea42dd6f59
Step 21/21 : LABEL org.mobyproject.config '{"capabilities":["all"],"binds":["/dev:/dev","/etc/resolv.conf:/etc/resolv.conf","/run:/run","/var/config:/config","/var/log:/var/log/dom0","/:/hostfs"],"net":"host","pid":"host"}' org.mobyproject.linuxkit.revision 'unknown' org.mobyproject.linuxkit.version 'unknown' org.opencontainers.image.revision 'fce4804a6328eaa83e576e2764c06aacb8ad5900' org.opencontainers.image.source 'https://github.com/linuxkit/linuxkit'
 ---> Running in 4e9e8745fdda
 ---> 31f8696796e2
Removing intermediate container 4e9e8745fdda
Successfully built 31f8696796e2
Successfully tagged zededa/zedctr:0f38bbbff95eae348a92e87e837455ad8b4cee6d-arm64
Pushing zededa/zedctr:0f38bbbff95eae348a92e87e837455ad8b4cee6d-arm64
The push refers to a repository [docker.io/zededa/zedctr]
7d5fc6efe9e0: Preparing
c7891aa30485: Preparing
c2c99f72275e: Preparing
ef235399e49a: Preparing
543b981cbc5d: Preparing
48de7e63e03e: Preparing
400d5a602195: Preparing
54964e4148f6: Preparing
0d8cb2c82ade: Preparing
5fbc3e8ffa1e: Preparing
66658f6c4ca6: Preparing
42f65d3fc3bb: Preparing
0684225156a7: Preparing
54964e4148f6: Waiting
0d8cb2c82ade: Waiting
5fbc3e8ffa1e: Waiting
66658f6c4ca6: Waiting
48de7e63e03e: Waiting
400d5a602195: Waiting
0684225156a7: Waiting
c2c99f72275e: Layer already exists
7d5fc6efe9e0: Layer already exists
543b981cbc5d: Layer already exists
48de7e63e03e: Layer already exists
400d5a602195: Layer already exists
c7891aa30485: Pushed
ef235399e49a: Pushed
54964e4148f6: Pushed
42f65d3fc3bb: Layer already exists
0d8cb2c82ade: Pushed
0684225156a7: Layer already exists
5fbc3e8ffa1e: Pushed
66658f6c4ca6: Pushed
0f38bbbff95eae348a92e87e837455ad8b4cee6d-arm64: digest: sha256:f06170a16713e8a457d7cb62ab1df13da23717e0c461047f000ff829f31015ec size: 3047
Pushing zededa/zedctr:0f38bbbff95eae348a92e87e837455ad8b4cee6d-arm64 to manifest zededa/zedctr:0f38bbbff95eae348a92e87e837455ad8b4cee6d
time="2018-12-21T08:08:10+01:00" level=warning msg="Couldn't find or access image reference \"zededa/zedctr:0f38bbbff95eae348a92e87e837455ad8b4cee6d-s390x\". Skipping image."
Digest: sha256:3b04b8d4a4f745f7a5dc23c6ad4689ac1f9fa15870f2b3bbf1072ad88efe44ff 743
Not signing zededa/zedctr:0f38bbbff95eae348a92e87e837455ad8b4cee6d
Build and push complete, not releasing, all done.
make: Leaving directory '/home/zededa-ci/src/zenbuild/pkg'
make: Entering directory '/home/zededa-ci/src/zenbuild/build-pkgs'
Building and pushing "zededa/build-pkgs_abuild:7ae4d9f9fa290963de466d5ed96d6c9318354824"
7ae4d9f9fa290963de466d5ed96d6c9318354824: Pulling from zededa/build-pkgs_abuild
Digest: sha256:29cb5d3b6d6ac25de0cd7db7f7eedbffd4f3391a4b0c8c0b4ce6d943bab997b8
Status: Image is up to date for zededa/build-pkgs_abuild:7ae4d9f9fa290963de466d5ed96d6c9318354824
Building and pushing "zededa/build-pkgs_uefi:a3362428c518fb4db1a136a961bd17e8a66fb693"
a3362428c518fb4db1a136a961bd17e8a66fb693: Pulling from zededa/build-pkgs_uefi
Digest: sha256:3112c8cbfdfab4cae4b47267749843762e2d75600f3e267a7ba9643724d40564
Status: Image is up to date for zededa/build-pkgs_uefi:a3362428c518fb4db1a136a961bd17e8a66fb693
make: Leaving directory '/home/zededa-ci/src/zenbuild/build-pkgs'
cd bios ; _() { C=`docker create $1 fake` ; docker export $C | tar -xf - $2 ; docker rm $C ; } ; _ zededa/build-pkgs_uefi:a3362428c518fb4db1a136a961bd17e8a66fb693-arm64 OVMF.fd
a200f222729843364b3fc387c5c0a7091395634ea63345e43e0244573d67604d
make -C build-tools all
make[1]: Entering directory '/home/zededa-ci/src/zenbuild/build-tools'
make[1]: Nothing to be done for 'all'.
make[1]: Leaving directory '/home/zededa-ci/src/zenbuild/build-tools'
tee: /dev/tty: No such device or address
make[1]: Entering directory '/home/zededa-ci/src/zenbuild/pkg'
(cd ..; ./parse-pkgs.sh pkg/zedctr//Dockerfile.in > pkg/zedctr//Dockerfile)
Building and pushing "zededa/zedctr:0f38bbbff95eae348a92e87e837455ad8b4cee6d"
Sending build context to Docker daemon  20.48kB
Step 1/21 : FROM zededa/ztools:latest as ztools
 ---> c74f7f23ab35
Step 2/21 : FROM zededa/xen-tools:9c96b441d083d7ef7bcb602bf009fa91bd7ebbf2-arm64 as xen-tools
 ---> 194a0d29c96f
Step 3/21 : FROM zededa/dnsmasq:c5985cdd83998d06255fe115d230a280c6928f1b-arm64 as dnsmasq
 ---> 85ce87902c8e
Step 4/21 : FROM zededa/strongswan:8f5ee3b98aa3ea49a9a4231baac9be933d6155ec-arm64 as strongswan
 ---> 2e11606a1b07
Step 5/21 : FROM zededa/gpt-tools:fe878611e4e032ea10946cbc9a1c3d5b22349dc4-arm64 as gpttools
 ---> 245b06fc67fd
Step 6/21 : FROM zededa/watchdog:2aea3af274e4928d2eab2b738d0e100ee5362173-arm64 as watchdog
 ---> 2682e16114b6
Step 7/21 : FROM alpine:3.8
 ---> 637f35dd3ce4
Step 8/21 : RUN apk add --no-cache     yajl xz bash openssl iptables ip6tables iproute2 dhcpcd     apk-cron coreutils dmidecode sudo libbz2 libuuid ipset     libpcap libaio logrotate pixman glib curl radvd perl ethtool     openssh-server util-linux e2fsprogs libcrypto1.0 xorriso
 ---> Running in 7eaf4238c23a
fetch http://dl-cdn.alpinelinux.org/alpine/v3.8/main/aarch64/APKINDEX.tar.gz
fetch http://dl-cdn.alpinelinux.org/alpine/v3.8/community/aarch64/APKINDEX.tar.gz
(1/62) Installing apk-cron (1.0-r1)
(2/62) Installing ncurses-terminfo-base (6.1_p20180818-r1)
(3/62) Installing ncurses-terminfo (6.1_p20180818-r1)
(4/62) Installing ncurses-libs (6.1_p20180818-r1)
(5/62) Installing readline (7.0.003-r0)
(6/62) Installing bash (4.4.19-r1)
Executing bash-4.4.19-r1.post-install
(7/62) Installing libattr (2.4.47-r7)
(8/62) Installing libacl (2.2.52-r5)
(9/62) Installing coreutils (8.29-r2)
(10/62) Installing ca-certificates (20171114-r3)
(11/62) Installing nghttp2-libs (1.32.0-r0)
(12/62) Installing libssh2 (1.8.0-r3)
(13/62) Installing libcurl (7.61.1-r1)
(14/62) Installing curl (7.61.1-r1)
(15/62) Installing dhcpcd (7.0.7-r0)
(16/62) Installing dmidecode (3.1-r0)
(17/62) Installing libuuid (2.32-r0)
(18/62) Installing libblkid (2.32-r0)
(19/62) Installing libcom_err (1.44.2-r0)
(20/62) Installing e2fsprogs-libs (1.44.2-r0)
(21/62) Installing e2fsprogs (1.44.2-r0)
(22/62) Installing ethtool (4.16-r0)
(23/62) Installing libffi (3.2.1-r4)
(24/62) Installing libintl (0.19.8.1-r2)
(25/62) Installing libmount (2.32-r0)
(26/62) Installing pcre (8.42-r0)
(27/62) Installing glib (2.56.1-r0)
(28/62) Installing libmnl (1.0.4-r0)
(29/62) Installing jansson (2.11-r0)
(30/62) Installing libnftnl-libs (1.1.1-r0)
(31/62) Installing iptables (1.6.2-r0)
(32/62) Installing ip6tables (1.6.2-r0)
(33/62) Installing libelf (0.8.13-r3)
(34/62) Installing iproute2 (4.13.0-r0)
Executing iproute2-4.13.0-r0.post-install
(35/62) Installing ipset (6.38-r1)
(36/62) Installing libaio (0.3.111-r0)
(37/62) Installing libbz2 (1.0.6-r6)
(38/62) Installing libcrypto1.0 (1.0.2q-r0)
(39/62) Installing libpcap (1.8.1-r1)
(40/62) Installing popt (1.16-r7)
(41/62) Installing logrotate (3.14.0-r0)
(42/62) Installing openssh-keygen (7.7_p1-r3)
(43/62) Installing openssh-server-common (7.7_p1-r3)
(44/62) Installing openssh-server (7.7_p1-r3)
(45/62) Installing libssl1.0 (1.0.2q-r0)
(46/62) Installing openssl (1.0.2q-r0)
(47/62) Installing perl (5.26.3-r0)
(48/62) Installing pixman (0.34.0-r5)
(49/62) Installing radvd (2.17-r2)
Executing radvd-2.17-r2.pre-install
(50/62) Installing sudo (1.8.23-r2)
(51/62) Installing libsmartcols (2.32-r0)
(52/62) Installing findmnt (2.32-r0)
(53/62) Installing libfdisk (2.32-r0)
(54/62) Installing util-linux (2.32-r0)
(55/62) Installing libburn (1.4.8-r0)
(56/62) Installing libedit (20170329.3.1-r3)
(57/62) Installing libisofs (1.4.8-r0)
(58/62) Installing libisoburn (1.4.8-r0)
(59/62) Installing xorriso (1.4.8-r0)
(60/62) Installing xz-libs (5.2.4-r0)
(61/62) Installing xz (5.2.4-r0)
(62/62) Installing yajl (2.1.0-r0)
Executing busybox-1.28.4-r1.trigger
Executing ca-certificates-20171114-r3.trigger
Executing glib-2.56.1-r0.trigger
OK: 72 MiB in 75 packages
 ---> a297607edc33
Removing intermediate container 7eaf4238c23a
Step 9/21 : RUN [ `uname -m` = "aarch64" ] && apk add --no-cache libfdt || :
 ---> Running in 0753a591f136
fetch http://dl-cdn.alpinelinux.org/alpine/v3.8/main/aarch64/APKINDEX.tar.gz
fetch http://dl-cdn.alpinelinux.org/alpine/v3.8/community/aarch64/APKINDEX.tar.gz
(1/1) Installing libfdt (1.4.4-r0)
OK: 72 MiB in 76 packages
 ---> fcba093ff448
Removing intermediate container 0753a591f136
Step 10/21 : RUN ln -s libpcap.so.1 /usr/lib/libpcap.so
 ---> Running in 2b0f8bd5fff6
 ---> 994d862096cc
Removing intermediate container 2b0f8bd5fff6
Step 11/21 : RUN ssh-keygen -A ; echo PermitRootLogin yes >> /etc/ssh/sshd_config ; sed -ie '/^root/s#^.*$#root:$6$Ndt1G5AYZFQ8rz7m$7vGZMKKotSYxwxk/.jMfuOCzxw0I3DNedygaQaLF7kYSYsLqiBHhmc8RJSXp8/VxSYPpgYSz/8fkv0hO6I4js.:17477:0:::::#' /etc/shadow
 ---> Running in 3767c40d9087
ssh-keygen: generating new host keys: RSA DSA ECDSA ED25519 
 ---> 70ba98d0680a
Removing intermediate container 3767c40d9087
Step 12/21 : COPY --from=xen-tools / /
 ---> 6c7b2e469a2c
Step 13/21 : COPY --from=ztools / /
 ---> 4a741df020db
Step 14/21 : COPY --from=gpttools / /
 ---> 72a2be5545cb
Step 15/21 : COPY --from=dnsmasq /usr/sbin/dnsmasq /opt/zededa/bin/dnsmasq
 ---> 7f138234f1cc
Step 16/21 : COPY --from=strongswan / /
 ---> 9575406ae092
Step 17/21 : COPY --from=watchdog /usr/sbin /usr/sbin
 ---> b6ffd396df75
Step 18/21 : COPY rootfs/ /
 ---> 58108f085c5a
Step 19/21 : RUN chmod 644 /etc/logrotate.d/zededa
 ---> Running in 7ed65a7f50e3
 ---> fbee7580362e
Removing intermediate container 7ed65a7f50e3
Step 20/21 : CMD /init.sh
 ---> Running in 35e990c55e30
 ---> bc181fe3bd5c
Removing intermediate container 35e990c55e30
Step 21/21 : LABEL org.mobyproject.config '{"capabilities":["all"],"binds":["/dev:/dev","/etc/resolv.conf:/etc/resolv.conf","/run:/run","/var/config:/config","/var/log:/var/log/dom0","/:/hostfs"],"net":"host","pid":"host"}' org.mobyproject.linuxkit.revision 'unknown' org.mobyproject.linuxkit.version 'unknown' org.opencontainers.image.revision 'fce4804a6328eaa83e576e2764c06aacb8ad5900' org.opencontainers.image.source 'https://github.com/linuxkit/linuxkit'
 ---> Running in 53583d352662
 ---> a18c028c7fec
Removing intermediate container 53583d352662
Successfully built a18c028c7fec
Successfully tagged zededa/zedctr:0f38bbbff95eae348a92e87e837455ad8b4cee6d-arm64
Pushing zededa/zedctr:0f38bbbff95eae348a92e87e837455ad8b4cee6d-arm64
The push refers to a repository [docker.io/zededa/zedctr]
7d5fc6efe9e0: Preparing
69ab670d751e: Preparing
c2c99f72275e: Preparing
e42b73c86e51: Preparing
543b981cbc5d: Preparing
c92d3713dbd9: Preparing
400d5a602195: Preparing
54f5de899092: Preparing
39f26d5379e3: Preparing
39ec69315a0d: Preparing
722298563ab9: Preparing
42f65d3fc3bb: Preparing
0684225156a7: Preparing
c92d3713dbd9: Waiting
400d5a602195: Waiting
54f5de899092: Waiting
39f26d5379e3: Waiting
39ec69315a0d: Waiting
722298563ab9: Waiting
42f65d3fc3bb: Waiting
0684225156a7: Waiting
7d5fc6efe9e0: Layer already exists
c2c99f72275e: Layer already exists
543b981cbc5d: Layer already exists
400d5a602195: Layer already exists
e42b73c86e51: Pushed
69ab670d751e: Pushed
54f5de899092: Pushed
39f26d5379e3: Pushed
42f65d3fc3bb: Layer already exists
0684225156a7: Layer already exists
39ec69315a0d: Pushed
722298563ab9: Pushed
c92d3713dbd9: Pushed
0f38bbbff95eae348a92e87e837455ad8b4cee6d-arm64: digest: sha256:f0f74e6467c5f93cbf556d42c436f0551daa59c63317714c8459108d38dd4022 size: 3047
Pushing zededa/zedctr:0f38bbbff95eae348a92e87e837455ad8b4cee6d-arm64 to manifest zededa/zedctr:0f38bbbff95eae348a92e87e837455ad8b4cee6d
time="2018-12-21T08:10:04+01:00" level=warning msg="Couldn't find or access image reference \"zededa/zedctr:0f38bbbff95eae348a92e87e837455ad8b4cee6d-s390x\". Skipping image."
Digest: sha256:e8a7a8708ceb0cfe32abd4b5ff80c6d31e6030e3780ff0c2658f63946e1d33a7 743
Not signing zededa/zedctr:0f38bbbff95eae348a92e87e837455ad8b4cee6d
Build and push complete, not releasing, all done.
make[1]: Leaving directory '/home/zededa-ci/src/zenbuild/pkg'
DOCKER_ARCH_TAG="arm64" ./parse-pkgs.sh images/installer.yml.in > images/installer.yml
# the following is a horrible hack that needs to go away ASAP
if [ "aarch64" != `uname -m` ] ; then \
           sed -e '/source:/s#rootfs.img#rootfs_aarch64.img#' \
               -e '/command:/s#/dev/sda#/dev/vda#' -i.orig images/installer.yml ;\
   echo "WARNING: We are assembling a aarch64 image on `uname -m`. Things may break." ;\
        fi
DOCKER_ARCH_TAG="arm64" ./parse-pkgs.sh images/rootfs.yml.in > images/rootfs.yml
# the following is a horrible hack that needs to go away ASAP
if [ "aarch64" != `uname -m` ] ; then \
           sed -e '/source:/s#rootfs.img#rootfs_aarch64.img#' \
               -e '/command:/s#/dev/sda#/dev/vda#' -i.orig images/rootfs.yml ;\
   echo "WARNING: We are assembling a aarch64 image on `uname -m`. Things may break." ;\
        fi
./makerootfs.sh images/rootfs.yml squash rootfs_aarch64.img
Extract kernel image: zededa/kernel:7b989ae20b664c80e4f7c52a6aa7c8228f3609aa-arm64
Add init containers:
Process init image: zededa/grub:10f9c3a840901f1888615c1c1ac5f8ce65e55b7e-arm64
Process init image: zededa/device-trees:1bca882c64827de08bba9aa7713441b2b4d7ca8d-arm64
Process init image: zededa/fw:298163b691690b23d5db7c11e0cd69f6f1de57c7-arm64
Process init image: zededa/xen:f51bf3d17fad15b71242befbddec96e177132a99-arm64
Process init image: zededa/gpt-tools:fe878611e4e032ea10946cbc9a1c3d5b22349dc4-arm64
Process init image: zededa/dom0-ztools:c6d8f2123c748379add5d3dbbac23e3630131760-arm64
Process init image: linuxkit/init:v0.5
Process init image: linuxkit/runc:v0.5
Process init image: linuxkit/containerd:v0.5
Process init image: linuxkit/getty:v0.5
Add onboot containers:
  Create OCI config for linuxkit/sysctl:v0.5
  Create OCI config for linuxkit/modprobe:v0.5
  Create OCI config for linuxkit/mount:v0.5
Add service containers:
  Create OCI config for linuxkit/openntpd:v0.5
  Create OCI config for zededa/wwan:5f68442251df0f2625fde14e947f11de2374b72d-arm64
  Create OCI config for zededa/wlan:8aa66e76c276b97d1141801d3f461e2b3f8f8f97-arm64
  Create OCI config for zededa/guacd:1bdc3c8ca55db141372b1a12daf7d12c04866eed-arm64
  Create OCI config for zededa/zedctr:0f38bbbff95eae348a92e87e837455ad8b4cee6d-arm64
Add files:
  /containers/services/zededa-tools/lower/opt/zededa/bin/versioninfo
Parallel mksquashfs: Using 4 processors
Creating 4.0 filesystem on /rootfs.img, block size 131072.
[/                                                           ]     0/17595   0%[========-                                                   ]  2600/17595  14%[========================/                                   ]  7400/17595  42%[=============================================\              ] 13500/17595  76%[=============================================|              ] 13700/17595  77%[==================================================\         ] 15200/17595  86%[===========================================================/] 17595/17595 100%

Exportable Squashfs 4.0 filesystem, gzip compressed, data block size 131072
	compressed data, compressed metadata, compressed fragments, compressed xattrs
	duplicates are removed
Filesystem size 192564.27 Kbytes (188.05 Mbytes)
	31.76% of uncompressed filesystem size (606220.81 Kbytes)
Inode table size 185825 bytes (181.47 Kbytes)
	26.00% of uncompressed inode table size (714785 bytes)
Directory table size 192302 bytes (187.79 Kbytes)
	45.00% of uncompressed directory table size (427324 bytes)
Number of duplicate files found 4493
Number of inodes 18912
Number of files 13865
Number of fragments 750
Number of symbolic links  3447
Number of device nodes 8
Number of fifo nodes 0
Number of socket nodes 0
Number of directories 1592
Number of ids (unique uids + gids) 3
Number of uids 1
	root (0)
Number of gids 3
	root (0)
	shadow (42)
	tty (5)
./makeiso.sh images/installer.yml installer_aarch64.iso
Extract kernel image: zededa/kernel:7b989ae20b664c80e4f7c52a6aa7c8228f3609aa-arm64
Add init containers:
Process init image: zededa/grub:10f9c3a840901f1888615c1c1ac5f8ce65e55b7e-arm64
Process init image: zededa/device-trees:1bca882c64827de08bba9aa7713441b2b4d7ca8d-arm64
Process init image: zededa/xen:f51bf3d17fad15b71242befbddec96e177132a99-arm64
Process init image: linuxkit/init:v0.5
Process init image: linuxkit/runc:v0.5
Process init image: linuxkit/getty:v0.5
Add onboot containers:
  Create OCI config for zededa/mkimage-raw-efi:932773aae8f4bb3de7651b9a8a60d9cf3104fce5-arm64
Pull image: zededa/mkimage-raw-efi:932773aae8f4bb3de7651b9a8a60d9cf3104fce5-arm64
Add files:
  /bits/config.img
  /bits/rootfs.img
time="2018-12-21T08:13:14+01:00" level=fatal msg="failed to add filesystem parts: open rootfs.img: no such file or directory"
xorriso 1.4.6 : RockRidge filesystem manipulator, libburnia project.

Drive current: -outdev 'stdio:linuxkit-efi.iso'
Media current: stdio file, overwriteable
Media status : is blank
Media summary: 0 sessions, 0 data blocks, 0 data,  885g free
Added to ISO image: directory '/'='/tmp/efi'
xorriso : UPDATE : 7488 files added in 1 seconds
xorriso : UPDATE : 7488 files added in 1 seconds
libisofs: NOTE : Cannot arrange content of data files in surely reproducible way
xorriso : UPDATE :  9.68% done
ISO image produced: 110703 sectors
Written to medium : 110703 sectors at LBA 0
Writing to 'stdio:linuxkit-efi.iso' completed successfully.

./makerootfs.sh images/installer.yml squash rootfs_aarch64.img_installer.img
Extract kernel image: zededa/kernel:7b989ae20b664c80e4f7c52a6aa7c8228f3609aa-arm64
Add init containers:
Process init image: zededa/grub:10f9c3a840901f1888615c1c1ac5f8ce65e55b7e-arm64
Process init image: zededa/device-trees:1bca882c64827de08bba9aa7713441b2b4d7ca8d-arm64
Process init image: zededa/xen:f51bf3d17fad15b71242befbddec96e177132a99-arm64
Process init image: linuxkit/init:v0.5
Process init image: linuxkit/runc:v0.5
Process init image: linuxkit/getty:v0.5
Add onboot containers:
  Create OCI config for zededa/mkimage-raw-efi:932773aae8f4bb3de7651b9a8a60d9cf3104fce5-arm64
Add files:
  /bits/config.img
  /bits/rootfs.img
time="2018-12-21T08:14:05+01:00" level=fatal msg="failed to add filesystem parts: open rootfs.img: no such file or directory"
Parallel mksquashfs: Using 4 processors
Creating 4.0 filesystem on /rootfs.img, block size 131072.
[=============================================================-] 5653/5653 100%

Exportable Squashfs 4.0 filesystem, gzip compressed, data block size 131072
	compressed data, compressed metadata, compressed fragments, compressed xattrs
	duplicates are removed
Filesystem size 75828.05 Kbytes (74.05 Mbytes)
	35.37% of uncompressed filesystem size (214376.15 Kbytes)
Inode table size 59181 bytes (57.79 Kbytes)
	25.67% of uncompressed inode table size (230550 bytes)
Directory table size 63132 bytes (61.65 Kbytes)
	44.91% of uncompressed directory table size (140585 bytes)
Number of duplicate files found 1438
Number of inodes 5446
Number of files 4195
Number of fragments 150
Number of symbolic links  911
Number of device nodes 2
Number of fifo nodes 0
Number of socket nodes 0
Number of directories 338
Number of ids (unique uids + gids) 3
Number of uids 1
	root (0)
Number of gids 3
	root (0)
	shadow (42)
	tty (5)
tar c rootfs_aarch64.img_installer.img config.img | ./makeflash.sh -C 350 installer_aarch64.raw "efi imga conf_win"
1+0 records in
1+0 records out
1 byte copied, 0.0148687 s, 0.1 kB/s
Warning: The kernel is still using the old partition table.
The new table will be used at the next reboot or after you
run partprobe(8) or kpartx(8)
The operation has completed successfully.
Setting name!
partNum is 0
Warning: The kernel is still using the old partition table.
The new table will be used at the next reboot or after you
run partprobe(8) or kpartx(8)
The operation has completed successfully.
Setting name!
partNum is 1
Warning: The kernel is still using the old partition table.
The new table will be used at the next reboot or after you
run partprobe(8) or kpartx(8)
The operation has completed successfully.
Setting name!
partNum is 3
Warning: The kernel is still using the old partition table.
The new table will be used at the next reboot or after you
run partprobe(8) or kpartx(8)
The operation has completed successfully.
rm rootfs_aarch64.img_installer.img
tar c rootfs_aarch64.img config.img | ./makeflash.sh -C 8192 fallback_aarch64.raw
1+0 records in
1+0 records out
1 byte copied, 0.000151489 s, 6.6 kB/s
Creating new GPT entries.
Warning: The kernel is still using the old partition table.
The new table will be used at the next reboot or after you
run partprobe(8) or kpartx(8)
The operation has completed successfully.
Setting name!
partNum is 0
Warning: The kernel is still using the old partition table.
The new table will be used at the next reboot or after you
run partprobe(8) or kpartx(8)
The operation has completed successfully.
Setting name!
partNum is 1
Warning: The kernel is still using the old partition table.
The new table will be used at the next reboot or after you
run partprobe(8) or kpartx(8)
The operation has completed successfully.
Setting name!
partNum is 2
Warning: The kernel is still using the old partition table.
The new table will be used at the next reboot or after you
run partprobe(8) or kpartx(8)
The operation has completed successfully.
Setting name!
partNum is 3
Warning: The kernel is still using the old partition table.
The new table will be used at the next reboot or after you
run partprobe(8) or kpartx(8)
The operation has completed successfully.
Setting name!
partNum is 8
Warning: The kernel is still using the old partition table.
The new table will be used at the next reboot or after you
run partprobe(8) or kpartx(8)
The operation has completed successfully.
qemu-img convert -c -f raw -O qcow2 fallback_aarch64.raw fallback_aarch64.qcow2
rm fallback_aarch64.raw
ln -s fallback_aarch64.qcow2 fallback_aarch64.img
cp Makefile bios/OVMF.fd config.img installer_aarch64.iso installer_aarch64.raw rootfs_aarch64.img fallback_aarch64.img build-pkgs/zenix
make -C build-pkgs BUILD-PKGS=zenix LINUXKIT_OPTS="--disable-content-trust --disable-cache --force" forcepush
make[1]: Entering directory '/home/zededa-ci/src/zenbuild/build-pkgs'
Building and pushing "zededa/zenix:70de03f484d874df89cad34f7711ee2cc7fc200d"
Sending build context to Docker daemon  992.2MB
Step 1/9 : FROM alpine:edge
 ---> 698b28d4f8d1
Step 2/9 : RUN apk add --no-cache qemu-system-x86_64 qemu-system-aarch64 bash make git
 ---> Running in 69e6aa567843
fetch http://dl-cdn.alpinelinux.org/alpine/v3.7/main/aarch64/APKINDEX.tar.gz
fetch http://dl-cdn.alpinelinux.org/alpine/v3.7/community/aarch64/APKINDEX.tar.gz
(1/59) Installing pkgconf (1.3.10-r0)
(2/59) Installing ncurses-terminfo-base (6.0_p20171125-r1)
(3/59) Installing ncurses-terminfo (6.0_p20171125-r1)
(4/59) Installing ncurses-libs (6.0_p20171125-r1)
(5/59) Installing readline (7.0.003-r0)
(6/59) Installing bash (4.4.19-r1)
Executing bash-4.4.19-r1.post-install
(7/59) Installing ca-certificates (20171114-r0)
(8/59) Installing libssh2 (1.8.0-r2)
(9/59) Installing libcurl (7.61.1-r1)
(10/59) Installing expat (2.2.5-r0)
(11/59) Installing pcre2 (10.30-r0)
(12/59) Installing git (2.15.3-r0)
(13/59) Installing make (4.2.1-r0)
(14/59) Installing libcap-ng (0.7.8-r1)
(15/59) Installing libcap (2.25-r1)
(16/59) Installing libffi (3.2.1-r4)
(17/59) Installing libintl (0.19.8.1-r1)
(18/59) Installing libuuid (2.31.1-r0)
(19/59) Installing libblkid (2.31.1-r0)
(20/59) Installing libmount (2.31.1-r0)
(21/59) Installing pcre (8.41-r1)
(22/59) Installing glib (2.54.2-r0)
(23/59) Installing qemu (2.10.1-r3)
Executing qemu-2.10.1-r3.pre-install
Executing qemu-2.10.1-r3.post-install
[91m*
* If you want to run VM as unprivileged user and let Qemu create tunX devices,
* then you must add that user to the group "qemu".
* If you use KVM for hardware-assisted virtualization, then you may also need
* to add that user to the group "kvm".
*
[0m(24/59) Installing libaio (0.3.110-r1)
(25/59) Installing alsa-lib (1.1.4.1-r2)
(26/59) Installing libbz2 (1.0.6-r6)
(27/59) Installing libepoxy (1.4.3-r1)
(28/59) Installing libdrm (2.4.88-r0)
(29/59) Installing wayland-libs-server (1.14.0-r2)
(30/59) Installing wayland-libs-cursor (1.14.0-r2)
(31/59) Installing wayland-libs-client (1.14.0-r2)
(32/59) Installing mesa-gbm (17.2.4-r1)
(33/59) Installing libgcc (6.4.0-r5)
(34/59) Installing gmp (6.1.2-r1)
(35/59) Installing nettle (3.3-r0)
(36/59) Installing libtasn1 (4.12-r3)
(37/59) Installing p11-kit (0.23.2-r2)
(38/59) Installing libunistring (0.9.7-r0)
(39/59) Installing gnutls (3.6.1-r0)
(40/59) Installing libjpeg-turbo (1.5.3-r2)
(41/59) Installing lzo (2.10-r2)
(42/59) Installing libnfs (2.0.0-r0)
(43/59) Installing pixman (0.34.0-r3)
(44/59) Installing libpng (1.6.34-r1)
(45/59) Installing libstdc++ (6.4.0-r5)
(46/59) Installing snappy (1.1.4-r2)
(47/59) Installing libogg (1.3.3-r1)
(48/59) Installing celt051 (0.5.1.3-r0)
(49/59) Installing opus (1.2.1-r1)
(50/59) Installing db (5.3.28-r0)
(51/59) Installing libsasl (2.1.26-r11)
(52/59) Installing spice-server (0.14.1-r1)
(53/59) Installing libusb (1.0.21-r0)
(54/59) Installing usbredir (0.7.1-r0)
(55/59) Installing libressl2.6-libtls (2.6.5-r0)
(56/59) Installing libressl (2.6.5-r0)
(57/59) Installing vde2-libs (2.3.2-r8)
(58/59) Installing qemu-system-aarch64 (2.10.1-r3)
(59/59) Installing qemu-system-x86_64 (2.10.1-r3)
Executing busybox-1.27.2-r6.trigger
Executing ca-certificates-20171114-r0.trigger
Executing glib-2.54.2-r0.trigger
OK: 75 MiB in 70 packages
 ---> ab54c14cc503
Removing intermediate container 69e6aa567843
Step 3/9 : COPY . /bits/
 ---> dea464118aec
Step 4/9 : COPY OVMF.fd /bits/bios/OVMF.fd
 ---> 2e1018ef4113
Step 5/9 : COPY runme.sh /
 ---> 4d939fa46e73
Step 6/9 : RUN touch /bits/bios/OVMF.fd
 ---> Running in 37aa324195d8
 ---> a7b17835f9ff
Removing intermediate container 37aa324195d8
Step 7/9 : WORKDIR /bits
 ---> 626fd89c2631
Removing intermediate container b0de5b78cbd9
Step 8/9 : ENTRYPOINT /runme.sh
 ---> Running in b9d09287ba31
 ---> a2a710f53683
Removing intermediate container b9d09287ba31
Step 9/9 : LABEL org.mobyproject.linuxkit.revision 'unknown' org.mobyproject.linuxkit.version 'unknown' org.opencontainers.image.revision 'fce4804a6328eaa83e576e2764c06aacb8ad5900' org.opencontainers.image.source 'https://github.com/linuxkit/linuxkit'
 ---> Running in 9f6080b1d681
 ---> e6095c2f919f
Removing intermediate container 9f6080b1d681
Successfully built e6095c2f919f
Successfully tagged zededa/zenix:70de03f484d874df89cad34f7711ee2cc7fc200d-arm64
Pushing zededa/zenix:70de03f484d874df89cad34f7711ee2cc7fc200d-arm64
The push refers to a repository [docker.io/zededa/zenix]
78eeaa47ea58: Preparing
c96588d795bb: Preparing
d9b3865e0acd: Preparing
d502bfffa6f6: Preparing
4af15f4709b6: Preparing
7f4507898901: Preparing
2a2e682c36db: Preparing
2a2e682c36db: Waiting
7f4507898901: Waiting
c96588d795bb: Layer already exists
7f4507898901: Layer already exists
2a2e682c36db: Layer already exists
78eeaa47ea58: Pushed
d9b3865e0acd: Pushed
4af15f4709b6: Pushed
d502bfffa6f6: Pushed
70de03f484d874df89cad34f7711ee2cc7fc200d-arm64: digest: sha256:b33248f7eb109c11683fbb34cf162dcd446b4efc73a6b2aae5e6f7a1d3e3b104 size: 1787
Pushing zededa/zenix:70de03f484d874df89cad34f7711ee2cc7fc200d-arm64 to manifest zededa/zenix:70de03f484d874df89cad34f7711ee2cc7fc200d
time="2018-12-21T08:20:50+01:00" level=warning msg="Couldn't find or access image reference \"zededa/zenix:70de03f484d874df89cad34f7711ee2cc7fc200d-s390x\". Skipping image."
Digest: sha256:812dc7a8e6e1ffd7ec34883ba275cb3f7c650b45ff1b5fe9b8154b6ce8f87d3d 743
Not signing zededa/zenix:70de03f484d874df89cad34f7711ee2cc7fc200d
Build and push complete, not releasing, all done.
make[1]: Leaving directory '/home/zededa-ci/src/zenbuild/build-pkgs'
make: Entering directory '/home/zededa-ci/src/zenbuild/build-pkgs'
Building and pushing "zededa/zenix:latest"
Sending build context to Docker daemon  992.2MB
Step 1/9 : FROM alpine:edge
 ---> 698b28d4f8d1
Step 2/9 : RUN apk add --no-cache qemu-system-x86_64 qemu-system-aarch64 bash make git
 ---> Using cache
 ---> ab54c14cc503
Step 3/9 : COPY . /bits/
 ---> Using cache
 ---> dea464118aec
Step 4/9 : COPY OVMF.fd /bits/bios/OVMF.fd
 ---> Using cache
 ---> 2e1018ef4113
Step 5/9 : COPY runme.sh /
 ---> Using cache
 ---> 4d939fa46e73
Step 6/9 : RUN touch /bits/bios/OVMF.fd
 ---> Using cache
 ---> a7b17835f9ff
Step 7/9 : WORKDIR /bits
 ---> Using cache
 ---> 626fd89c2631
Step 8/9 : ENTRYPOINT /runme.sh
 ---> Using cache
 ---> a2a710f53683
Step 9/9 : LABEL org.mobyproject.linuxkit.revision 'unknown' org.mobyproject.linuxkit.version 'unknown' org.opencontainers.image.revision 'fce4804a6328eaa83e576e2764c06aacb8ad5900' org.opencontainers.image.source 'https://github.com/linuxkit/linuxkit'
 ---> Using cache
 ---> e6095c2f919f
Successfully built e6095c2f919f
Successfully tagged zededa/zenix:latest-arm64
Pushing zededa/zenix:latest-arm64
The push refers to a repository [docker.io/zededa/zenix]
78eeaa47ea58: Preparing
c96588d795bb: Preparing
d9b3865e0acd: Preparing
d502bfffa6f6: Preparing
4af15f4709b6: Preparing
7f4507898901: Preparing
2a2e682c36db: Preparing
2a2e682c36db: Waiting
7f4507898901: Waiting
4af15f4709b6: Layer already exists
78eeaa47ea58: Layer already exists
d502bfffa6f6: Layer already exists
c96588d795bb: Layer already exists
d9b3865e0acd: Layer already exists
2a2e682c36db: Layer already exists
7f4507898901: Layer already exists
latest-arm64: digest: sha256:b33248f7eb109c11683fbb34cf162dcd446b4efc73a6b2aae5e6f7a1d3e3b104 size: 1787
Pushing zededa/zenix:latest-arm64 to manifest zededa/zenix:latest
time="2018-12-21T08:21:23+01:00" level=warning msg="Couldn't find or access image reference \"zededa/zenix:latest-s390x\". Skipping image."
Digest: sha256:812dc7a8e6e1ffd7ec34883ba275cb3f7c650b45ff1b5fe9b8154b6ce8f87d3d 743
Not signing zededa/zenix:latest
Build and push complete, not releasing, all done.
make: Leaving directory '/home/zededa-ci/src/zenbuild/build-pkgs'
FINISHED
